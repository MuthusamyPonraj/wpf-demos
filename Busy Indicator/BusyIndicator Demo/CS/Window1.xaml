<!--Window for applying custom skins-->
<syncfusion:ChromelessWindow 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf" UseNativeChrome="True"
    x:Class="BusyIndicatorDemo.Window1" Icon="App.ico" xmlns:local="clr-namespace:BusyIndicatorDemo" 
    x:Name="window1" WindowStartupLocation="CenterScreen" xmlns:sblayout="clr-namespace:SampleLayout.WPF;assembly=Syncfusion.SampleLayout.WPF"
    Title="BusyIndicator Demo" Width="800" 
    Height="610" FontFamily="Calibri" FontSize="13" >
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <Window.Resources>
        <sblayout:StringToCultureConverter x:Key="cultureconverter"/>
    </Window.Resources>
        <Grid>
        <Grid >
            <sblayout:SampleLayoutControl Header="Busy Indicator" x:Name="Sblayout" EventLogs="{Binding EventLogs}"
                                          Description="The Busy Indicator helps the users to show a waiting popup whenever a long process is running background. The control includes rich set of customizations with various Visual Styles.">
            
                <sblayout:SampleLayoutControl.PropertyViewContent>
                    <Grid Width="200">
                        <sblayout:GroupBoxAdv Header="User Options">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid TextElement.FontWeight="Normal">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="Busy Indicator Properties" HorizontalAlignment="Left" Margin="5" FontWeight="Bold" Grid.ColumnSpan="2"/>

                                    <TextBlock Text="Header" Margin="5" Grid.Row="1" TextWrapping="Wrap"/>
                                    <TextBox x:Name="header" Text="Loading" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" Margin="5" />

                                    <TextBlock Text="Description" Margin="5" TextWrapping="Wrap" Grid.Row="2" Grid.ColumnSpan="2"/>
                                    <TextBox x:Name="description" MaxHeight="300" Text="Loading Data. Please wait..."  VerticalAlignment="Center" TextWrapping="Wrap" AcceptsReturn="True" Grid.ColumnSpan="2" Grid.Column="0" Margin="5" Grid.Row="3"/>

                                    <TextBlock Text="IsIndeterminate " Margin="5" TextWrapping="WrapWithOverflow" Grid.Row="4"/>
                                    <CheckBox IsChecked="{Binding IsIndeterminate ,Mode=TwoWay}" x:Name="indeter" VerticalAlignment="Center" Grid.Column="1" Margin="5" Grid.Row="4" />

                                    <TextBlock Text="Close Button" Margin="5" TextWrapping="Wrap" Grid.Row="5"/>
                                    <ComboBox Grid.Column="1" Margin="5"  Grid.Row="5" x:Name="closebutton"
                                  SelectedIndex="0">
                                        <Visibility>Visible</Visibility>
                                        <Visibility>Collapsed</Visibility>
                                        <Visibility>Hidden</Visibility>
                                    </ComboBox>

                                    <TextBlock Text="Delay" Margin="5" TextWrapping="Wrap" Grid.Row="6"/>
                                    <syncfusion:TimeSpanEdit x:Name="delay" VerticalAlignment="Center" MinValue="0" MaxValue="15"
                                                             Grid.Column="1" Margin="5" Grid.Row="6" Value="0"/>
                                    <TextBlock Text="Is Busy" Margin="5" TextWrapping="Wrap" Grid.Row="7"/>
                                    <CheckBox IsChecked="{Binding IsBusy,Mode=TwoWay}" x:Name="busy" VerticalAlignment="Center" 
                                                             Grid.Column="1" Margin="5" Grid.Row="7" />



                                </Grid>
                            </Grid>
                        </sblayout:GroupBoxAdv>
                    </Grid>
                </sblayout:SampleLayoutControl.PropertyViewContent>

                <Grid>
                    <syncfusion:BusyIndicator x:Name="busyIndicator" 
                                              Header="{Binding ElementName=header, Path=Text}" 
                                              IsBusy="{Binding IsBusy, Mode=TwoWay}"
                                              LoadingDescription="{Binding ElementName=description, Path=Text}"
                                              CloseButtonVisibility="{Binding ElementName=closebutton, Path=SelectedItem}"
                                              IsIndeterminate="{Binding IsIndeterminate, Mode=TwoWay}" 
                                              Delay="{Binding ElementName=delay, Path=Value}" 
                                             ProgressValue="{Binding ProgressValue, Mode=TwoWay}"
                                            syncfusion:BusyIndicatorIsBusyChangedCommand.Command="{Binding IsBusyChangedCommand}" 
                                           
                                              OverlayOpacity="0.5">
                        <local:DataView/>
                    </syncfusion:BusyIndicator>
                </Grid>

            </sblayout:SampleLayoutControl>
        </Grid>

    </Grid>
</syncfusion:ChromelessWindow>