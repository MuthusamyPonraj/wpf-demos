<syncfusion:ChromelessWindow x:Class="GaugeChart_2008.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
    xmlns:local="clr-namespace:GaugeChart_2008" Icon="App.ico"
    xmlns:GaugeChart2008="clr-namespace:GaugeChart_2008"
    Title="Gauge Chart Demo"  WindowStartupLocation="CenterScreen"
    syncfusion:LayoutControl.SetMetroMode="True" >

    <Window.Resources>
        <DataTemplate x:Key="LegendTemplate1">
            <StackPanel Orientation="Horizontal" >
                <Ellipse Fill="{Binding Interior}" Height="15" Width="15"/>
                <TextBlock Margin="2,0,0,0" Height="20" Text="{Binding Path=CorrespondingPoints[0].DataPoint.Item}" Width="Auto" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:ChartLegend}}}"  />
            </StackPanel>
        </DataTemplate>
        
        <local:HighlightedToOpacityConverter x:Key="myOpcConverter" />

        <local:MyDataCollection x:Key="SeriesData1"/>
        <local:MyDataCollection x:Key="SeriesData2"/>

        <local:My2007SalesCollection x:Key="BarSeriesData1"/>
        <local:My2007SalesCollection x:Key="BarSeriesData2"/>

        <LinearGradientBrush x:Key="VerticalLine" EndPoint="0,0.5" StartPoint="1,0.5">
            <GradientStop Color="#FF000000" Offset="0"/>
            <GradientStop Color="#FF2E2D2D" Offset="1"/>
            <GradientStop Color="#FF8A8A8A" Offset="0.51"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLine" EndPoint="0.5,0" StartPoint="0.5,1">
            <GradientStop Color="#FF000000" Offset="0"/>
            <GradientStop Color="#FF2E2D2D" Offset="1"/>
            <GradientStop Color="#FF8A8A8A" Offset="0.51"/>
        </LinearGradientBrush>
        
        <!-- Scales Properties -->
        <DataTemplate x:Key="DataGauge">
            <GaugeChart2008:UserControl1 Loaded="circularGauge1_Loaded"/>            
        </DataTemplate>

        <DataTemplate x:Key="DataChart">
            <!--Hosting Chart control in second Row of the Grid-->
            <syncfusion:Chart   x:Name="Chart1" Grid.Row="1" Margin="15">
                <!--Chart Legend declaration-->
                <syncfusion:Chart.Legends>
                    <syncfusion:ChartLegend />
                </syncfusion:Chart.Legends>
                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea IsContextMenuEnabled="True" >
                    <!--Primary Axis(X)-->
                    <syncfusion:ChartArea.PrimaryAxis>
                        <!--X axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Year" Interval="2" >
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <!--Secondary Axis(Y)-->
                    <syncfusion:ChartArea.SecondaryAxis>
                        <!--Y axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Profit" SmallTicksPerInterval="0"  LabelFormat="0.00">
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <!--Chart 1st series declaration-->
                    <syncfusion:ChartSeries Name="series1" Label="Profit in $"  Type="Spline" StrokeThickness=" 3" Interior="Green"  DataSource="{StaticResource SeriesData1}" 
                                     BindingPathX="Year" BindingPathsY="Y1" IsIndexed="False">
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </DataTemplate >

        <DataTemplate x:Key="BarChart">
            <syncfusion:Chart  x:Name="Chart2" Margin="15">
                <!--Chart Legend declaration-->
                <syncfusion:Chart.Legends>
                    <syncfusion:ChartLegend />
                </syncfusion:Chart.Legends>
                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea IsContextMenuEnabled="True" >
                    <!--Primary Axis(X)-->
                    <syncfusion:ChartArea.PrimaryAxis>
                        <!--X axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Name" Interval="1" LabelRotateAngle="30">
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <!--Secondary Axis(Y)-->
                    <syncfusion:ChartArea.SecondaryAxis>
                        <!--Y axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Sales">
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <!--Chart 1st series declaration-->
                    <syncfusion:ChartSeries Name="series2" Label="Sales"  Type="Column"  StrokeThickness=" 3" Interior="Green"  DataSource="{StaticResource BarSeriesData1}" 
                                     BindingPathX="CategoryName" BindingPathsY="CategorySales" >
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </DataTemplate >


        <DataTemplate x:Key="PieChart">
            <syncfusion:Chart Name="PieChart1" Loaded="PieChart1_Loaded"  Grid.Row="1" Margin="20">
                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea  BorderThickness="0" RenderTransformOrigin="0.5,0.5">
                    <!--Chart 1st series declaration-->
                    <syncfusion:ChartSeries 
                                         syncfusion:ChartPieType.ExplodedIndex="3" 
                                         syncfusion:ChartPieType.ExplodeRadius="2.0" 
                                         Type="Pie" Label="Agricultural Products" BindingPathX="Expense" BindingPathsY="Amount">
                        <!--Chart series Adornment declaation-->
                        <syncfusion:ChartSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo  x:Name="Adornments"  LabelContentPath="DataPoint.Tag" Visible="True"  SegmentShowLine="True" SegmentHorizontalAlignment="Right" SegmentVerticalAlignment="Top" LabelTemplate="{StaticResource LabelsTemplate}" ConnectorTemplate="{StaticResource ConnectorTemplate}"/>
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                    <!--ChartArea Legend declaration-->
                    <syncfusion:ChartArea.Legend>
                        <syncfusion:ChartLegend  RowsCount="2" ItemTemplate="{StaticResource LegendTemplate1}" CheckBoxVisibility="Collapsed" CornerRadius="4"  BorderThickness="1"/>
                    </syncfusion:ChartArea.Legend>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </DataTemplate >
    </Window.Resources>

    <syncfusion:LayoutControl HeaderText="GridControl Gauge Chart Demo"
                              HeaderPanelVisibility="Visible" GridViewHeaderText="GridControl"
                              HeaderDescriptionText="This sample illustrates the GridControl with Chart and Gauge"
                              UserOptionsVisibility="Collapsed"
                              SkinPickerVisibility="Collapsed"
                              syncfusion:LayoutControl.ApplyStyle="True"
                              TraceVisibility="Collapsed"
                              LayoutMode="Metro">
        <syncfusion:LayoutControl.GridView>
            <ScrollViewer CanContentScroll="True" syncfusion:SkinStorage.VisualStyle="Office2013" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                <syncfusion:GridControl x:Name="grid" syncfusion:LayoutControl.SetMetroMode="True"/>
            </ScrollViewer>
        </syncfusion:LayoutControl.GridView>

    </syncfusion:LayoutControl>
         
</syncfusion:ChromelessWindow>
