<syncfusion:RibbonWindow x:Class="EXCEL.Window1"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:Converters="clr-namespace:EXCEL.Converters"
                         xmlns:local="clr-namespace:EXCEL.Helpers"
                         xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                         syncfusion:SkinStorage.VisualStyle="Office2013"
                         Office2010Icon="/Resources/syncfusion.png"
                         xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                         Title="Excel Like UI Demo"
                         Width="1024"
                         Height="720"
                         AllowsTransparency="False"
                         Icon="App.ico"
                         IsGlassActive="False"
                         ShowHelpButton="False"
                         WindowStartupLocation="CenterScreen">
    <syncfusion:RibbonWindow.Resources>

        <Converters:FontWeightToBoolConverter x:Key="FontWeightConverter" />
        <Converters:FontStyleToBoolConverter x:Key="FontStyleConverter" />
        <Converters:TextDecorationsToBoolConverter x:Key="TextDecorationsConverter" />
        <Converters:HorizontalAlignmentToCenterAlignConverter x:Key="HorizontalCenterAlignConverter" />
        <Converters:HorizontalAlignmentToLeftAlignConverter x:Key="LeftAlignConverter" />
        <Converters:HorizontalAlignmentToRightAlignConverter x:Key="RightAlignConverter" />
        <Converters:VerticalAlignmentToBottomAlignConverter x:Key="BottomAlignConverter" />
        <Converters:VerticalAlignmentToCenterAlignConverter x:Key="VerticalCenterAlignConverter" />
        <Converters:VerticalAlignmentToTopAlignConverter x:Key="TopAlignConverter" />
        <Converters:ColorConverter x:Key="colorConverter"/>

        <SolidColorBrush x:Key="Blue.Foreground" Color="#FF333333"/>
        <Geometry x:Key="Default.PathData">M 0 0 L 4 4 L 8 0 Z</Geometry>
        <SolidColorBrush x:Key="Default.QuickDropDownBackground" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="ButtonHoverOuterBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush  x:Key="ButtonHoverOuterBorderBrush" Color="#FFF7C840"/>

        <LinearGradientBrush x:Key="ButtonHoverInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFEB9C" Offset="0.036"/>
            <GradientStop Color="#FFFFE279" Offset="0.308"/>
            <GradientStop Color="#FFFFE585" Offset="0.574"/>
            <GradientStop Color="#FFFFEEA4" Offset="0.638"/>
            <GradientStop Color="#FFFFFCE0" Offset="0.955"/>
        </LinearGradientBrush>

        <SolidColorBrush  x:Key="ButtonHoverInnerBorderBrush" Color="#FFFEFEFE"/>

        <SolidColorBrush x:Key="ButtonSelectedHoverInnerBorderBrush" Color="#FFFFF7CE"/>


        <LinearGradientBrush x:Key="ButtonSelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFEC79" Offset="0.028"/>
            <GradientStop Color="#FFFFD86B" Offset="0.428"/>
            <GradientStop Color="#FFFFE072" Offset="0.917"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ButtonPressedOuterBackgroundBrush" Color="#FFF6C867"/>
        <SolidColorBrush x:Key="ButtonPressedOuterBorderBrush" Color="#FFF7C840"/>
        <LinearGradientBrush x:Key="ButtonPressedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFC09467" Offset="0.005"/>
            <GradientStop Color="#FFC2792C" Offset="0.011"/>
            <GradientStop Color="#FFC29B45" Offset="0.995"/>
            <GradientStop Color="#FFBFA976" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonPressedInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFDDD81" Offset="0.054"/>
            <GradientStop Color="#FFFEE287" Offset="0.984"/>
            <GradientStop Color="#FFFAD77A" Offset="0.989"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="TextBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFCFAF5A"/>
            <GradientStop Color="#FFEFDA71" Offset="1"/>
        </LinearGradientBrush>

        <ControlTemplate x:Key="MiniToolbarTemplate">
            <Border x:Name="PART_Border"
                    Height="51"
                    BorderThickness="2"
                    CornerRadius="3">
                <ItemsPresenter Margin="2" />
            </Border>
        </ControlTemplate>

        <syncfusion:MiniToolbar x:Key="MiniToolbar">
            <syncfusion:RibbonComboBox Name="minitoolbar_Font"
                                       Width="100"
                                       IsEditable="True" />
            <syncfusion:RibbonComboBox Width="40" />

            <syncfusion:RibbonButton Command="EditingCommands.IncreaseFontSize" SizeForm="ExtraSmall" ToolTip="Increase Font Size" />
            <syncfusion:RibbonButton Command="EditingCommands.DecreaseFontSize" SizeForm="ExtraSmall" ToolTip="Decrease Font Size" />

            <syncfusion:RibbonButton Command="EditingCommands.ToggleBold" SizeForm="ExtraSmall" ToolTip="Bold" />
            <syncfusion:RibbonButton Command="EditingCommands.ToggleItalic" SizeForm="ExtraSmall" ToolTip="Italic"/>
            <syncfusion:RibbonButton Command="EditingCommands.ToggleUnderline" SizeForm="ExtraSmall" ToolTip="Underline" />
            <!--  Click="OnStrikeThrough"  -->
            <syncfusion:RibbonButton SizeForm="ExtraSmall" SmallIcon="/Resources/Strike.png" />

            <syncfusion:RibbonButton Command="EditingCommands.ToggleSubscript" SizeForm="ExtraSmall" ToolTip="Subscript" />
            <syncfusion:RibbonButton Command="EditingCommands.ToggleSuperscript" SizeForm="ExtraSmall" ToolTip="SuperScript" />

            <syncfusion:RibbonButton SizeForm="ExtraSmall" SmallIcon="/Resources/FontColor.png"  ToolTip="Font color"/>
            <syncfusion:RibbonButton SizeForm="ExtraSmall" SmallIcon="/Resources/TextHighlight.png" ToolTip="Highlight" />
        </syncfusion:MiniToolbar>

        <Style TargetType="{x:Type syncfusion:RibbonButton}">
            <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type RichTextBox}}, Path=Content}" />
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />
        </Style>

        <Style TargetType="{x:Type syncfusion:SimpleMenuButton}">
            <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=Content}" />
        </Style>

        <Style TargetType="{x:Type syncfusion:RibbonMenuItem}">
            <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=Content}" />
        </Style>


        <Style x:Key="RibbonSplitButtonStyle" TargetType="{x:Type syncfusion:SplitButton}">
            <Setter Property="Label" Value="New Button"/>
            <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png"/>
            <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <!--<Setter Property="FontSize" Value="11.5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>-->
            <Setter Property="Foreground" Value="{StaticResource Blue.Foreground}"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <Trigger Property="SizeForm" Value="ExtraSmall">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border CornerRadius="2" MinHeight="22" Name="OuterBorder"   BorderThickness="1"       
                Opacity="{TemplateBinding Opacity}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="12"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Name="PART_Button" MinHeight="22"
                            Grid.Column="0" CornerRadius="2,0,0,2"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                            Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667" Grid.RowSpan="2"/>
                                                <Image Margin="1,1,1,0" Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0"/>
                                                <Rectangle Width="16" Height="6" Margin="1,0,1,1" Fill="{Binding Path=Color,Converter={StaticResource colorConverter}}" Grid.Row="1"/>
                                            </Grid>
                                        </Border>

                                        <Border Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
				        Grid.Column="1" CornerRadius="0,2,2,0"
				        BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}"
						Background="Transparent">
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Path Focusable="False" 
                          Fill="#FF6D6F6F"                         
                          StrokeThickness="2" 
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Data="{StaticResource Default.PathData}" />
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
				       Placement="Bottom"
				       Focusable="False"
				       PopupAnimation="Fade"
				       AllowsTransparency="True"
				       StaysOpen="False"
				       IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                        <!--<Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>


                                    <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    
                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                    <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>-->
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="SizeForm" Value="Small"/>
                        <Condition Property="HitTestArea" Value="LabelAndImage"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border	CornerRadius="2" MinHeight="22" Name="OuterBorder"
                BorderThickness="{TemplateBinding BorderThickness}"
               
                Opacity="{TemplateBinding Opacity}"
                IsEnabled="{TemplateBinding IsEnabled}"
                >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="15"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Name="PART_Button"  
					Grid.Column="0" 
					Background="Transparent" CornerRadius="2,0,0,2" BorderThickness="0" BorderBrush="Transparent" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}" Grid.ColumnSpan="2"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>

                                                <Image Name="PART_Image" Grid.Column="0" Margin="1"
							VerticalAlignment="Center" HorizontalAlignment="Center"
							Width="16" Height="16"
                               RenderOptions.BitmapScalingMode="NearestNeighbor"
							Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							Visibility="Collapsed" />
                                                <TextBlock Grid.Column="1" Name="label"
						   Text="{TemplateBinding Label}"
						   Foreground="{TemplateBinding Foreground}"
						   VerticalAlignment="{TemplateBinding VerticalAlignment}"
						   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						   Margin="2,0,2,0" />
                                            </Grid>
                                        </Border>

                                        <Border Name="PART_ToggleButton"
					  Grid.Column="2" ToolTip="{TemplateBinding ToggleButtonToolTip}"
					  BorderThickness="1,0,0,0" BorderBrush="Transparent"
					  Background="Transparent" CornerRadius="0,2,2,0" >
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Path Fill="{StaticResource Blue.Path.Fill}"
					  HorizontalAlignment="Center"
					  VerticalAlignment="Center"
                      StrokeThickness="2"
					  Data="{StaticResource Default.PathData}"					  
					  Focusable="False"/>
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
				   Placement="Bottom"
				   Focusable="False"
				   PopupAnimation="Fade"
				   AllowsTransparency="True"
				   StaysOpen="False"
				   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>

                                    <Trigger Property="IsSmallImageVisible" Value="True">
                                        <Setter TargetName="PART_Image" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                        <!--<Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>


                                    <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                    <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>-->
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>


                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!--<Setter Property="Background" Value="Transparent"/>-->
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="SizeForm" Value="Small"/>
                        <Condition Property="HitTestArea" Value="ImageOnly"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border	CornerRadius="2" MinHeight="22" Name="OuterBorder"
                BorderThickness="1" BorderBrush="Transparent"
                Opacity="{TemplateBinding Opacity}"  
                IsEnabled="{TemplateBinding IsEnabled}"
                >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Name="PART_Button" MinHeight="22" 
					Grid.Column="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
					Background="Transparent"						
					VerticalAlignment="Center"  CornerRadius="2,0,0,2"
					HorizontalAlignment="Center">
                                            <Grid>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Image Margin="1"
                           Width="16" Height="16"
                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                           Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Border>

                                        <Border Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
					Grid.Column="1"
					BorderThickness="1,0,0,0"
					 CornerRadius="0,2,2,0"
					>
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <DockPanel>
                                                    <TextBlock DockPanel.Dock="Left" Name="label"
						   Text="{TemplateBinding Label}"
						   Foreground="{TemplateBinding Foreground}"
						   VerticalAlignment="Center"
						   Margin="2,0,2,0"/>
                                                    <Path DockPanel.Dock="Right" 
						  Fill="{StaticResource Blue.Path.Fill}"
                          StrokeThickness="2"    
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Data="{StaticResource Default.PathData}"
						  Margin="2"/>
                                                </DockPanel>
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
				   Placement="Bottom"
				   Focusable="False"
				   PopupAnimation="Fade"
				   AllowsTransparency="True"
				   StaysOpen="False"
				   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                        <!--<Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>


                                    <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                    <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>-->
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>



                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                </MultiTrigger>

                <Trigger Property="SizeForm" Value="Large">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border	CornerRadius="2" Name="OuterBorder"
			BorderThickness="{TemplateBinding BorderThickness}"
			BorderBrush="{TemplateBinding BorderBrush}"
			Background="{TemplateBinding Background}"
			Opacity="{TemplateBinding Opacity}"
			IsEnabled="{TemplateBinding IsEnabled}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Name="PART_Button"
					Background="Transparent"
					BorderThickness="0" CornerRadius="2,2,0,0"
					BorderBrush="Transparent"
					Visibility="Collapsed">
                                            <Grid>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Image Width="31" Height="31"
                           RenderOptions.BitmapScalingMode="NearestNeighbor"
						Source="{Binding Path=LargeIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Border>

                                        <Border Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
					 CornerRadius="0,0,2,2"
					BorderThickness="0,1,0,0" >

                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <syncfusion:CustomItemsControl
						Margin="0,2,0,2"  Name="label"
						Path="{StaticResource Path}" 
						Focusable="False"
						ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <syncfusion:MultilinePanel
									VerticalAlignment="{TemplateBinding VerticalAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </syncfusion:CustomItemsControl>
                                            </Grid>
                                        </Border>

                                        <Popup Name="PART_Popup"
				   Placement="Bottom"
				   Focusable="False"
				   PopupAnimation="Fade"
				   AllowsTransparency="True"
				   StaysOpen="False"
				   IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </StackPanel>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>

                                    <Trigger Property="IsLargeImageVisible" Value="True">
                                        <Setter TargetName="PART_Button" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                        <!--<Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>


                                    <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                    <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                    <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                    <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                    <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="1,0,1,1"/>-->
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="1,0,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>

            </Style.Triggers>
        </Style>


    </syncfusion:RibbonWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <!--  <RowDefinition Height="Auto"  />  -->
            <RowDefinition Height="Auto" />
            <RowDefinition Height="25" />
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <syncfusion:Ribbon Name="MyRibbon"
                           Grid.Row="0"
                           VerticalAlignment="Top">

            <syncfusion:Ribbon.BackStage>
                <syncfusion:Backstage>
                    
                    <syncfusion:BackStageCommandButton Command="{Binding SaveCommand}"
                                                       Header="Save"
                                                       Icon="/Resources/Save.png" />
                </syncfusion:Backstage>
            </syncfusion:Ribbon.BackStage>

            <!--  Applicaton Menu  -->
            <syncfusion:Ribbon.ApplicationMenu>
                <syncfusion:ApplicationMenu Width="38"
                                            Height="38"
                                            ApplicationButtonImage="/Resources/syncfusion.png"
                                            IsPopupOpen="False"
                                            syncfusion:Ribbon.KeyTip="F">
                    <!--  Application Recent Document list Area  -->
                    <syncfusion:ApplicationMenu.MenuItems>
                        <TextBlock MinWidth="250" FontWeight="Bold">Save Items</TextBlock>
                        <Separator Padding="0" />
                    </syncfusion:ApplicationMenu.MenuItems>
                    <syncfusion:SimpleMenuButton Icon="Resources/New32.png" Label="New" />
                    <syncfusion:SimpleMenuButton Icon="Resources/Open32.png" Label="Open" />
                    <syncfusion:SimpleMenuButton Icon="Resources/Save32.png" Label="Save" />
                    <syncfusion:SplitMenuButton Icon="/Resources/SaveAs32.png" Label="Save As">
                        <syncfusion:ApplicationMenuGroup Header="Save in another format" IconBarEnabled="False">
                            <syncfusion:SimpleMenuButton Description="Save a copy of the item to your computer in one of the several formates"
                                                         Icon="Resources/SaveAs32.png"
                                                         Label="Save As" />
                        </syncfusion:ApplicationMenuGroup>
                    </syncfusion:SplitMenuButton>
                    <syncfusion:SimpleMenuButton Icon="Resources/Delete.png" Label="Delete" />
                    <Separator Margin="40,0,0,0" />
                    <syncfusion:SplitMenuButton Icon="Resources/Print32.png"
                                                Label="Print"
                                                syncfusion:Ribbon.KeyTip="PR">
                        <syncfusion:ApplicationMenuGroup Header="Preview and print">
                            <syncfusion:SimpleMenuButton Description="Select a printer, number of copies, and other printing options before printing."
                                                         Icon="Resources/Print32.png"
                                                         Label="Print" />
                            <syncfusion:SimpleMenuButton Description="Send the item directly to the default printer without making changes."
                                                         Icon="Resources/Print32.png"
                                                         Label="Quick Print" />
                        </syncfusion:ApplicationMenuGroup>
                    </syncfusion:SplitMenuButton>
                    <Separator Margin="40,0,0,0" />
                    <syncfusion:SimpleMenuButton Icon="Resources/Close32.png" Label="Close" />
                      <!--Footer items-->  
                    <syncfusion:ApplicationMenu.ApplicationItems>

                        <syncfusion:ButtonPanel>
                            <syncfusion:RibbonButton Label="Edit Options"
                                                     SizeForm="Small"
                                                     SmallIcon="Resources/Options.png" />
                        </syncfusion:ButtonPanel>
                    </syncfusion:ApplicationMenu.ApplicationItems>
                </syncfusion:ApplicationMenu>
            </syncfusion:Ribbon.ApplicationMenu>

            <syncfusion:Ribbon.QuickAccessToolBar>
                <syncfusion:QuickAccessToolBar>
                    <syncfusion:RibbonButton SizeForm="ExtraSmall"   
                                             Command="{Binding SaveCommand}"
                                             SmallIcon="/Resources/Save.png"
                                             syncfusion:Ribbon.KeyTip="1" ToolTip="Save" />
                    <syncfusion:RibbonButton SizeForm="ExtraSmall"
                                             Command="{Binding UndoCommand}"
                                             SmallIcon="/Resources/Undo16.png"
                                             syncfusion:Ribbon.KeyTip="2"  ToolTip="Undo"/>
                    <syncfusion:RibbonButton SizeForm="ExtraSmall"
                                             Command="{Binding RedoCommand}"
                                             SmallIcon="/Resources/Redo16.png"
                                             syncfusion:Ribbon.KeyTip="3"  ToolTip="Redo"/>
                    <syncfusion:RibbonButton SizeForm="ExtraSmall"
                                             Command="{Binding PrintCommand}"
                                             SmallIcon="/Resources/print.gif"
                                             syncfusion:Ribbon.KeyTip="4" ToolTip="Print" />

                </syncfusion:QuickAccessToolBar>
            </syncfusion:Ribbon.QuickAccessToolBar>


            <syncfusion:RibbonTab Caption="Home" syncfusion:Ribbon.KeyTip="H" IsChecked="False">

                <!--  Ribbon Bar for Clipboard  -->
                <syncfusion:RibbonBar Header="Clipboard"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FN">
                    <syncfusion:RibbonButton Command="{Binding PasteCommand}"
                                             Label="Paste"
                                             LargeIcon="/Resources/paste32.png"
                                             SizeForm="Large" ToolTip="Paste" />
                    <syncfusion:RibbonButton Command="{Binding CutCommand}"
                                             Label="Cut"
                                             SizeForm="Small"
                                             SmallIcon="/Resources/Cut16.png" ToolTip="Cut" />
                    <syncfusion:RibbonButton Command="{Binding CopyCommand}"
                                             Label="Copy"
                                             SizeForm="Small"
                                             SmallIcon="/Resources/Copy16.png" ToolTip="Copy" />
                </syncfusion:RibbonBar>

                <!--  Ribbon Bar for Basic Text  -->
                <syncfusion:RibbonBar CollapseImage="/Resources/FontColor.png"
                                      Header="Basic Text"
                                      IsLargeButtonPanel="False"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FO">
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonComboBox Width="130"
                                                   ItemsSource="{Binding Source={x:Static Member=Fonts.SystemFontFamilies}}"
                                                   SelectedItem="{Binding FontFamily}" ToolTip="Font Family" />
                        <syncfusion:RibbonComboBox Width="45"
                                                   ItemsSource="{Binding FontSizeList}"
                                                   SelectedItem="{Binding FontSize}" ToolTip="Font size" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton Command="{Binding FontSizeCommand}"
                                                 CommandParameter="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/FontSizeInc.png" ToolTip="Increase Font Size" />
                        <syncfusion:RibbonButton Command="{Binding FontSizeCommand}"
                                                 CommandParameter="False"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/FontSizeDec.png" ToolTip="Decrease Font Size" />
                    </syncfusion:ButtonPanel>

                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton IsSelected="{Binding Path=FontWeight,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource FontWeightConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/Bold16.png" ToolTip="Bold" />
                        <syncfusion:RibbonButton IsSelected="{Binding Path=FontStyle,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource FontStyleConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/Italic.png"  ToolTip="Ialic"/>
                        <syncfusion:RibbonButton IsSelected="{Binding Path=TextDecorations,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource TextDecorationsConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/Underline.png"  ToolTip="Underline"/>
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:SplitButton x:Name="ForeColorSplitButton" SizeForm="ExtraSmall" SmallIcon="/Resources/FontSplitButton.png" Style="{StaticResource RibbonSplitButtonStyle}"
                                                DataContext="{Binding ElementName=ForegroundColorPicker}" ToolTip="Font Color">
                            <syncfusion:ColorPickerPalette x:Name="ForegroundColorPicker"
                                                           IsExpanded="True"
                                                           Color="Red"/>
                        </syncfusion:SplitButton>
                        <syncfusion:SplitButton x:Name="BGColorSplitButton" SizeForm="ExtraSmall" SmallIcon="/Resources/FillColorSplitButton.png" Style="{StaticResource RibbonSplitButtonStyle}"
                                                DataContext="{Binding ElementName=BackgroundColorPicker}">
                            <syncfusion:ColorPickerPalette x:Name="BackgroundColorPicker" 
                                                           IsExpanded="True"
                                                           Color="Yellow" ToolTip="Fill Color" />
                        </syncfusion:SplitButton>
                    </syncfusion:ButtonPanel>
                </syncfusion:RibbonBar>
                <syncfusion:RibbonBar Header="Alignment "
                                      IsLargeButtonPanel="False"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FO">
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonButton Command="{Binding VerticalAlignmentCommand}"
                                                 CommandParameter="Top"
                                                 IsSelected="{Binding Path=VerticalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource TopAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/TopAlign.png" ToolTip="Top Align" />
                        <syncfusion:RibbonButton Command="{Binding VerticalAlignmentCommand}"
                                                 CommandParameter="Center"
                                                 IsSelected="{Binding Path=VerticalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource VerticalCenterAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/MiddleAlign.png"  ToolTip="Middle Align"/>
                        <syncfusion:RibbonButton Command="{Binding VerticalAlignmentCommand}"
                                                 CommandParameter="Bottom"
                                                 IsSelected="{Binding Path=VerticalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource BottomAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/BottomAlign.png" ToolTip="Bottom Align" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="5">
                        <syncfusion:RibbonButton Command="{Binding OrientationCommand}"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/Orientation.png" ToolTip="Orientation" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonButton Command="{Binding HorizontalAlignmentCommand}"
                                                 CommandParameter="Left"
                                                 IsSelected="{Binding Path=HorizontalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource LeftAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/AlignTextLeft16.png" ToolTip="Align Left" />
                        <syncfusion:RibbonButton Command="{Binding HorizontalAlignmentCommand}"
                                                 CommandParameter="Center"
                                                 IsSelected="{Binding Path=HorizontalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource HorizontalCenterAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/AlignTextCenter16.png" ToolTip="Align Center" />
                        <syncfusion:RibbonButton Command="{Binding HorizontalAlignmentCommand}"
                                                 CommandParameter="Right"
                                                 IsSelected="{Binding Path=HorizontalAlignment,
                                                                      Mode=TwoWay,
                                                                      Converter={StaticResource RightAlignConverter}}"
                                                 IsToggle="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/AlignTextRight16.png" ToolTip="Align Right" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton Command="{Binding IndentCommand}"
                                                 CommandParameter="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/IncreaseIndent16.png" ToolTip="Increase Indent" />
                        <syncfusion:RibbonButton Command="{Binding IndentCommand}"
                                                 CommandParameter="False"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/Resources/DecreaseIndent16.png" ToolTip="Decrease Indent"  />
                    </syncfusion:ButtonPanel>
                </syncfusion:RibbonBar>
            </syncfusion:RibbonTab>
        </syncfusion:Ribbon>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <TextBox x:Name="InfoAbtCurrentCell"
                     Width="150"
                     HorizontalContentAlignment="Center"
                     Text="{Binding CellLocationText}" />
            <TextBlock Width="50" Margin="2 0 0 0">Fx</TextBlock>
            <TextBox x:Name="Formulacell" Width="1500" />
        </StackPanel>

        <syncfusion:TabControlExt x:Name="Tab1"
                     CloseButtonType="Hide"
                    ShowTabListContextMenu="False"
                    TabStripPlacement="Bottom"                    
                    EnableLabelEdit="False"                    
                    Grid.Row="3"
                    SelectedIndex="{Binding ActiveTabIndex}"
            syncfusion:SkinStorage.VisualStyle="Office2013">

            <syncfusion:TabItemExt Header="Sheet1">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid1" />
                </ScrollViewer>
            </syncfusion:TabItemExt>

            <syncfusion:TabItemExt Header="Sheet2">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid2" />
                </ScrollViewer>
            </syncfusion:TabItemExt>

            <syncfusion:TabItemExt Header="Sheet3">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid3" />
                </ScrollViewer>
            </syncfusion:TabItemExt>
        </syncfusion:TabControlExt>
    </Grid>
</syncfusion:RibbonWindow>

