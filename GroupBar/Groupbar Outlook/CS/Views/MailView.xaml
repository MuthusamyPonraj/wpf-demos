<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:des="http://schemas.syncfusion.com/wpf"
             des:SkinStorage.VisualStyle="Office2013"
            
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:syncfusion="http://schemas.syncfusion.com/wpf" xmlns:local="clr-namespace:GroupbarOutlookDemo" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" x:Class="GroupbarOutlookDemo.MailView"
             mc:Ignorable="d" 
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.Tools.WPF;component/Controls/TreeViewAdv/Themes/Office2013Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <local:BooleanToVisibilityMultiConverter2 x:Key="BooleanToVisibilityMultiConverter2"/>
            <local:BoolToVisibilityMultiConverter x:Key="BoolToVisibilityMultiConverter"/>
            <Style BasedOn="{StaticResource Office2013TreeViewItemAdvStyle}"  x:Key="TreeViewItemStyle"  TargetType="{x:Type des:TreeViewItemAdv}">
                <Setter Property="ExpandAnimation" Value="{StaticResource TreeViewItemAdv_ExpandAnimation}" />
                <Setter Property="FadeAnimation" Value="{StaticResource TreeViewItemAdv_FadeAnimation}" />
                <Setter Property="Panel.Background" Value="Transparent" />
                <Setter Property="Control.Padding" Value="2,0,2,0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="Foreground" Value="{DynamicResource Office2013ForegroundBrush}" />
                <Setter Property="FontFamily" Value="{DynamicResource Office2013FontFamily}" />
                <Setter Property="IsExpanded" Value="True"/>
                <!--<Setter Property="Visibility">
                    <Setter.Value>
                        <MultiBinding ConverterParameter="header"  Converter="{StaticResource BooleanToVisibilityMultiConverter2}">
                            <Binding Path="ShowAll" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                            <Binding />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>-->
                    <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <Style TargetType="IFrameworkInputElement">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle Margin="0,0,0,0" Stroke="#FF000000" StrokeDashArray="1 2" Opacity="0" StrokeThickness="5" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <des:TreeViewAdvVirtualizingPanel Name="PART_ItemsPanel" IsShowLine="False" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="des:TreeViewItemAdv">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Background="{StaticResource Office2013_TreeViewAdv_DragMarkerBackground}" Height="2" Name="Part_TopDragLine" Visibility="Collapsed" />
                                <Grid Focusable="False" Background="Transparent" Grid.Row="1"
			        TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0" Grid.RowSpan="2" Name="VertLineGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>

                                        <des:TreeRootLine Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                Margin="0,0,0,0"
                                Panel.ZIndex="0"
                                Focusable="False" IsVerticalLine="True"
                                Name="PART_VerticalLinePartOne" Grid.Row="0" SnapsToDevicePixels="True"
                                LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                Visibility="Visible"
/>
                                        <des:TreeRootLine Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                Margin="0,0,0,0"
                                Panel.ZIndex="0"
                                Focusable="False"
                                IsVerticalLine="True"
                                Name="PART_VerticalLinePartTwo" Grid.Row="1" SnapsToDevicePixels="True"
                                LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                Visibility="Visible"
/>
                                    </Grid>
                                    <Grid Name="HorLineGrid">
                                        <des:TreeRootLine Height="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                            Width="13"
                            Panel.ZIndex="0"
                            Margin="9,0,-3,0"
                            Focusable="False"
                            HorizontalAlignment="Right"
                            IsVerticalLine="False"
                            Name="PART_HorizontalLine" Grid.Row="0" SnapsToDevicePixels="True"
                            LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                            LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
/>
                                    </Grid>
                                    <des:BottomLine Name="BottomBorder"
                                Grid.Column="0"
                                Grid.Row="0"
                                TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                Fill="Transparent"
                                SnapsToDevicePixels="True"
                                Margin="0,0,0,1" />

                                    <des:SelectRectangle Name="PART_SelectRectangle"
                                Grid.Column="0"
                                Grid.Row="0"
                                TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                Fill="Transparent"
                                SnapsToDevicePixels="True"
                                Margin="0,0,0,1" />
                                    <Expander Name="PART_Expander"
                            Height="13"
					        Grid.Column="0"
                            Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
					        Grid.Row="0" Panel.ZIndex="100"
                            Margin="1,0,0,0"
					        HorizontalAlignment="Center"
					        Focusable="False"
					        IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
					        Style="{TemplateBinding des:TreeViewAdv.ExpanderStyle}" />

                                    <Ellipse x:Name="path" Stretch="Fill" Grid.Row="0" Panel.ZIndex="100" HorizontalAlignment="Center"  VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Margin="1,0,0,0"   Grid.Column="0"  Width="12" Height="12" Visibility="Collapsed"
                                    StrokeThickness="2" Fill="White"
>
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="-180" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFEBF0F4" Offset="0.378" />
                                                <GradientStop Color="#FF119EDA" Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>

                                    <!--<Path x:Name="path" Stretch="Fill" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"  Grid.Row="0" Panel.ZIndex="100"
                            Margin="1,0,0,0"   Grid.Column="0"  Width="12" Height="10" Visibility="Collapsed"
		                        Data="F1 M 393.948,266.865C 394.242,265.891 394.417,264.866 394.417,263.797C 394.417,257.906 389.642,253.13 383.751,253.13C 377.859,253.13 373.084,257.906 373.084,263.797C 373.084,267.029 374.527,269.918 376.796,271.874L 377.853,269.536C 376.41,268.053 375.517,266.031 375.517,263.797C 375.517,259.25 379.203,255.564 383.751,255.564C 388.299,255.564 391.984,259.25 391.984,263.797C 391.984,264.562 391.845,265.289 391.647,265.992L 388.376,264.753L 389.587,267.999L 390.799,271.247L 393.858,269.618L 396.917,267.989L 393.948,266.865 Z "
                                    HorizontalAlignment="Center"  VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>-->

                                    <Grid x:Name="grid" Grid.Column="1" Margin="3,0,0,0" Grid.Row="0" Panel.ZIndex="20">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  />
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Name="PART_CompleteHeader" Orientation="Horizontal">
                                            <StackPanel Name="PART_ImagePanel" Orientation="Horizontal">
                                                <Image Name="ExpanderImage"
						            Focusable="False"
						            Source="{TemplateBinding ExpandedImageSource}"
						            Stretch="{TemplateBinding ImageStretch}"
						            Width="{TemplateBinding ImageWidth}"
						            Height="{TemplateBinding ImageHeight}" Visibility="Collapsed"
/>

                                                <Image Name="CollapsedImage"
						            Focusable="False"
						            Source="{TemplateBinding CollapsedImageSource}"
						            Stretch="{TemplateBinding ImageStretch}"
						            Width="{TemplateBinding ImageWidth}"
						            Height="{TemplateBinding ImageHeight}"
/>
                                                <Image Name="LeftImage"
						            Focusable="False"
						            Margin="2,0,0,0"
						            Source="{TemplateBinding LeftImageSource}"
						            Stretch="{TemplateBinding ImageStretch}"
						            Width="{TemplateBinding ImageWidth}"
						            Height="{TemplateBinding ImageHeight}"
/>
                                            </StackPanel>

                                            <StackPanel Name="PART_ItemContent"
                                    VerticalAlignment="Center" Width="{Binding ElementName=grid, Path=ActualWidth}"
                                    Focusable="True"
                                    KeyboardNavigation.TabNavigation="Cycle">
                                                <Border Name="Bd"
                                    ToolTip="{TemplateBinding des:TreeViewItemAdv.Header}"
                                    ToolTipService.IsEnabled="False"
                                    ToolTipService.Placement="Center"
                                    ToolTipService.HorizontalOffset="4"
                                    ToolTipService.VerticalOffset="2"
                                    Background="{TemplateBinding Panel.Background}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    BorderBrush="{TemplateBinding BorderBrush}" Margin="0,1,0,1"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="0"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    MinHeight="19">
                                                    <Grid>
                                                        <ContentPresenter Name="PART_Header"
										Visibility="Visible" Margin="{TemplateBinding Padding}"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Center"
										ContentSource="Header"
                                                                        
										Content="{TemplateBinding des:TreeViewItemAdv.Header}"
										ContentTemplate="{TemplateBinding des:TreeViewItemAdv.HeaderTemplate}"
										ContentTemplateSelector="{TemplateBinding des:TreeViewItemAdv.HeaderTemplateSelector}" />
                                                        <ContentPresenter x:Name="LoadingContentPresenter"
                                                    HorizontalAlignment="Left"
                                                    Content="{TemplateBinding LoadingHeader}"
                                                    ContentTemplate="{TemplateBinding LoadingHeaderTemplate}" Visibility="Collapsed" />
                                                    </Grid>
                                                </Border>

                                                <ContentPresenter Name="PART_EditHeader"
                                                    Visibility="Collapsed"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                    VerticalAlignment="Center"
                                                    ContentSource="Header"
                                                    Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                                    ContentTemplate="{Binding Path=EditedItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
													ContentTemplateSelector="{Binding Path=EditedItemTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
/>
                                            </StackPanel>

                                            <Image Name="RightImage"
                                    Focusable="False"
					                Margin="3,0,3,0"
					                Source="{TemplateBinding RightImageSource}"
                                    Stretch="{TemplateBinding ImageStretch}"
                                    Width="{TemplateBinding ImageWidth}"
                                    Height="{TemplateBinding ImageHeight}" />
                                        </StackPanel>
                                    </Grid>

                                    <Grid Grid.Column="1" Margin="-45,0,0,0"  Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ItemsPresenter Name="PART_ItemsHost" Visibility="Collapsed" />
                                    </Grid>
                                </Grid>
                                <Border Grid.Row="2" Background="{StaticResource Office2013_TreeViewAdv_DragMarkerBackground}" Height="2" Name="Part_BottomDragLine" Visibility="Collapsed" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="des:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize"  Value="18" />
                                    <Setter Property="Padding" Value="12,5,12,5" />
                                    <Setter Property="Fill" TargetName="BottomBorder" Value="{Binding Path=BorderBrush,RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter TargetName="PART_Expander" Property="Margin" Value="8,0,0,0" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.IsShowToolTip" Value="True">
                                    <Setter Property="ToolTipService.IsEnabled" TargetName="Bd" Value="True" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}">
                                    <Setter TargetName="LeftImage" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.RightImageSource" Value="{x:Null}">
                                    <Setter TargetName="RightImage" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.IsExpanded" Value="True">
                                    <Setter TargetName="ExpanderImage" Property="Source" Value="{Binding Path=ExpandedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="CollapsedImage" Property="Visibility"  Value="Collapsed" />
                                    <Setter TargetName="ExpanderImage" Property="Visibility"  Value="Visible" />
                                    <Setter TargetName="PART_ItemsHost" Property="Visibility"  Value="Visible" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.IsExpanded" Value="False">
                                    <Setter TargetName="CollapsedImage" Property="Source" Value="{Binding Path=CollapsedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="ExpanderImage" Property="Visibility"  Value="Collapsed" />
                                    <Setter TargetName="CollapsedImage" Property="Visibility"  Value="Visible" />
                                    <Setter TargetName="PART_ItemsHost" Property="Visibility"  Value="Collapsed" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="True" />
                                        <Condition Property="des:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ExpanderImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LeftImage" Property="Margin" Value="0,0,2,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="False" />
                                        <Condition Property="des:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="CollapsedImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LeftImage" Property="Margin" Value="0,0,2,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="True" />
                                        <Condition Property="des:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                        <Condition Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="False" />
                                        <Condition Property="des:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                        <Condition Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsEditable" Value="True" />
                                        <Condition Property="des:TreeViewItemAdv.IsInEditMode" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="PART_Header" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="Bd" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="PART_EditHeader" Value="Visible" />
                                </MultiTrigger>
                                <Trigger Property="des:TreeViewAdv.ShowRootLines" Value="False">
                                    <Setter Property="Visibility" TargetName="HorLineGrid" Value="Hidden" />
                                    <Setter Property="Visibility" TargetName="VertLineGrid" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.HasItems" Value="False" />
                                        <Condition Property="des:TreeViewItemAdv.IsLoadOnDemand" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="PART_Expander" Value="Hidden" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HeaderedContentControl.HasHeader" Value="False" />
                                        <Condition Property="FrameworkElement.Width" Value="NaN" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.MinWidth" TargetName="PART_Header" Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HeaderedContentControl.HasHeader" Value="False" />
                                        <Condition Property="FrameworkElement.Height" Value="NaN" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="PART_Header" Value="19" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_CompleteHeader" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" SourceName="PART_CompleteHeader" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=SelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PART_SelectRectangle" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=SelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PART_SelectRectangle" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsDragOver" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsDragOver" Value="True" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="PART_SelectRectangle" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="des:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="des:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                        <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_SelectRectangle" Property="Fill" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                </MultiTrigger>
                                <Trigger Property="des:TreeViewItemAdv.IsDraging" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <!--<Setter Property="Fill" TargetName="path" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />-->
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    <Setter Property="Opacity" TargetName="RightImage" Value="0.7" />
                                    <Setter Property="Opacity" TargetName="LeftImage" Value="0.7" />
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.IsLoadOnDemand" Value="True">
                                    <Setter Property="Visibility" TargetName="PART_Expander" Value="Visible" />
                                </Trigger>

                                <Trigger Property="des:TreeViewItemAdv.IsLoading" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Expander" />
                                    <Setter Property="Visibility" Value="Visible" TargetName="LoadingContentPresenter" />
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Header" />
                                    <Setter Property="Visibility" Value="Visible" TargetName="path" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="beginLoadOnDemandStoryBoard" Storyboard="{StaticResource loadOnDemandStoryBoard}">
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="des:TreeViewItemAdv.IsLoading" Value="False">
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginLoadOnDemandStoryBoard" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>

                    <Trigger Property="MultiColumnEnable" Value="True">
                        <Setter Property="Control.Padding" Value="0,0,0,0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type des:TreeViewItemAdv}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Background="{StaticResource Office2013_TreeViewAdv_DragMarkerBackground}" Height="2" Name="Part_TopDragLine" Visibility="Collapsed" />
                                        <Grid Focusable="False" Background="Transparent" Grid.Row="1"
			                TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" Grid.RowSpan="2" Name="VertLineGrid">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                </Grid.RowDefinitions>

                                                <des:TreeRootLine Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Margin="0,0,0,0"
                                        Panel.ZIndex="0"
                                        Focusable="False" IsVerticalLine="True"
                                        Name="PART_VerticalLinePartOne" Grid.Row="0" SnapsToDevicePixels="True"
                                        LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Visibility="Visible"
/>
                                                <des:TreeRootLine Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Margin="0,0,0,0"
                                        Panel.ZIndex="0"
                                        Focusable="False"
                                        IsVerticalLine="True"
                                        Name="PART_VerticalLinePartTwo" Grid.Row="1" SnapsToDevicePixels="True"
                                        LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Visibility="Visible"
/>
                                            </Grid>
                                            <Grid Name="HorLineGrid">

                                                <des:TreeRootLine Height="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Width="13"
                                        Panel.ZIndex="0"
                                        Margin="9,0,-3,0"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        IsVerticalLine="False"
                                        Name="PART_HorizontalLine" Grid.Row="0" SnapsToDevicePixels="True"
                                        LineBrush="{Binding Path=LineBrush, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"

                                        LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}"
                                        Visibility="Visible"
/>
                                            </Grid>
                                            <des:BottomLine Name="BottomBorder"
                                Grid.Column="0"
                                Grid.Row="0"
                                TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                Fill="Transparent"
                                SnapsToDevicePixels="True"
                                Margin="0,0,0,1" />

                                            <des:SelectRectangle Name="PART_SelectRectangle"
                                Grid.Column="0"
                                Grid.Row="0"
                                TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                Fill="Transparent"
                                SnapsToDevicePixels="True"
                                Margin="0,0,0,1" />
                                            <Expander Name="PART_Expander"
					                Grid.Column="0" Panel.ZIndex="100"
					                Grid.Row="0"
                                    Margin="0"
					                HorizontalAlignment="Center"
                                    Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
					                Focusable="False"
					                IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
					                Style="{TemplateBinding des:TreeViewAdv.ExpanderStyle}" />

                                            <Grid Grid.Column="1" Grid.Row="0" Panel.ZIndex="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <StackPanel Name="PART_CompleteHeader" Orientation="Horizontal">
                                                    <StackPanel Name="PART_ImagePanel" Margin="5,0,1,0" Orientation="Horizontal">
                                                        <Image Name="ExpanderImage"
						            Focusable="False"
						            Source="{TemplateBinding ExpandedImageSource}"
						            Stretch="{TemplateBinding ImageStretch}"
						            Width="{TemplateBinding ImageWidth}"
						            Height="{TemplateBinding ImageHeight}" Visibility="Collapsed"
/>

                                                        <Image Name="CollapsedImage"
						            Focusable="False"
						            Source="{TemplateBinding CollapsedImageSource}"
						            Stretch="{TemplateBinding ImageStretch}"
						            Width="{TemplateBinding ImageWidth}"
						            Height="{TemplateBinding ImageHeight}"
/>

                                                        <Image Name="LeftImage"
						                        Focusable="False"
						                        Margin="2,0,0,0"
						                        Source="{TemplateBinding LeftImageSource}"
						                        Stretch="{TemplateBinding ImageStretch}"
						                        Width="{TemplateBinding ImageWidth}"
						                        Height="{TemplateBinding ImageHeight}"
/>
                                                    </StackPanel>

                                                    <Border Name="Bd"
                                        ToolTip="{TemplateBinding des:TreeViewItemAdv.Header}"
                                        ToolTipService.IsEnabled="False"
                                        ToolTipService.Placement="Center"
                                        ToolTipService.HorizontalOffset="4"
                                        ToolTipService.VerticalOffset="2"
                                        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                        Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                        Padding="{Binding Path=Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                        TextElement.Foreground="{TemplateBinding Foreground}"
                                        BorderThickness="0"
                                        SnapsToDevicePixels="True"
                                        MinHeight="19" CornerRadius="0"
                                        ClipToBounds="True">
                                                        <StackPanel VerticalAlignment="Center"
                                            Focusable="True"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            Margin="1.5,0,-5,0">
                                                            <ContentControl Name="PART_Header"
                                                                ContentTemplate="{Binding Path=HeaderTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                                                ContentTemplateSelector="{Binding Path=HeaderTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}">
                                                                <ContentControl.Content>
                                                                    <des:TreeViewRowPresenter Name="PART_RowPresenter"
                                                            Margin="-1,1,1,1"
                                                            Content="{TemplateBinding des:TreeViewItemAdv.Header}"
                                                            Columns="{Binding Path=WrappedColumns, RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}">
                                                                    </des:TreeViewRowPresenter>
                                                                </ContentControl.Content>
                                                            </ContentControl>

                                                            <ContentPresenter Name="PART_EditHeader"
                                                    Visibility="Collapsed"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                    VerticalAlignment="Center"
                                                    ContentSource="Header"
                                                    Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewItemAdv}}}"
                                                    ContentTemplate="{Binding Path=EditedItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
													ContentTemplateSelector="{Binding Path=EditedItemTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}"
/>
                                                        </StackPanel>
                                                    </Border>
                                                </StackPanel>
                                            </Grid>

                                            <Grid Grid.Column="1" Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <ItemsPresenter Name="PART_ItemsHost" Visibility="Collapsed" />
                                            </Grid>
                                        </Grid>
                                        <Border Grid.Row="2" Background="{StaticResource Office2013_TreeViewAdv_DragMarkerBackground}" Height="2" Name="Part_BottomDragLine" Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="des:SkinStorage.EnableTouch" Value="true">
                                            <Setter Property="FontSize"  Value="18" />
                                            <Setter Property="Padding" Value="12,9.5,12,9.5" />
                                            <Setter Property="Fill" TargetName="BottomBorder" Value="{Binding Path=BorderBrush,RelativeSource={RelativeSource AncestorType={x:Type des:TreeViewAdv}}}" />

                                        </Trigger>
                                        <Trigger Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}">
                                            <Setter TargetName="LeftImage" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="des:TreeViewItemAdv.IsExpanded" Value="True">
                                            <Setter TargetName="ExpanderImage" Property="Source" Value="{Binding Path=ExpandedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Setter TargetName="CollapsedImage" Property="Visibility"  Value="Collapsed" />
                                            <Setter TargetName="ExpanderImage" Property="Visibility"  Value="Visible" />
                                            <Setter TargetName="PART_ItemsHost" Property="Visibility"  Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="des:TreeViewItemAdv.IsExpanded" Value="False">
                                            <Setter TargetName="CollapsedImage" Property="Source" Value="{Binding Path=CollapsedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                            <Setter TargetName="ExpanderImage" Property="Visibility"  Value="Collapsed" />
                                            <Setter TargetName="CollapsedImage" Property="Visibility"  Value="Visible" />
                                            <Setter TargetName="PART_ItemsHost" Property="Visibility"  Value="Collapsed" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="True" />
                                                <Condition Property="des:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ExpanderImage" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="LeftImage" Property="Margin" Value="0,0,2,0" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="False" />
                                                <Condition Property="des:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="CollapsedImage" Property="Visibility" Value="Collapsed" />
                                            <Setter TargetName="LeftImage" Property="Margin" Value="0,0,2,0" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="True" />
                                                <Condition Property="des:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                                <Condition Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsExpanded" Value="False" />
                                                <Condition Property="des:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                                <Condition Property="des:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsEditable" Value="True" />
                                                <Condition Property="des:TreeViewItemAdv.IsInEditMode" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Visibility" TargetName="PART_Header" Value="Collapsed" />
                                            <Setter Property="Visibility" TargetName="PART_EditHeader" Value="Visible" />
                                        </MultiTrigger>
                                        <Trigger Property="des:TreeViewItemAdv.IsShowToolTip" Value="True">
                                            <Setter Property="ToolTipService.IsEnabled" TargetName="Bd" Value="True" />
                                        </Trigger>
                                        <Trigger Property="des:TreeViewAdv.ShowRootLines" Value="False">
                                            <Setter Property="Visibility" TargetName="HorLineGrid" Value="Hidden" />
                                            <Setter Property="Visibility" TargetName="VertLineGrid" Value="Hidden" />
                                        </Trigger>
                                        <Trigger Property="des:TreeViewItemAdv.HasItems" Value="False">
                                            <Setter Property="Visibility" TargetName="PART_Expander" Value="Hidden" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" SourceName="PART_Header" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" SourceName="PART_Header" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                            </MultiTrigger.Conditions>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=SelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="PART_SelectRectangle" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=SelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Fill" TargetName="PART_SelectRectangle" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                        </MultiTrigger>
                                        <Trigger Property="des:TreeViewItemAdv.IsDragOver" Value="True">
                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="false" />
                                                <Condition Property="des:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="des:TreeViewItemAdv.IsSelected" Value="True" />
                                                <Condition Property="des:SkinStorage.EnableTouch" Value="true" />
                                                <Condition Property="des:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_SelectRectangle" Property="Fill" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                            <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                            <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Office2013_TreeViewAdv_SelectedBorderBrush}" />-->
                                        </MultiTrigger>
                                        <Trigger Property="des:TreeViewItemAdv.IsDraging" Value="True">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type des:TreeViewAdv}}}" />
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
         
            <DataTemplate DataType="{x:Type local:MailCategory}">
                <Border>
                    <TextBlock Text="{Binding Header}"/>
                </Border>
            </DataTemplate>
            <HierarchicalDataTemplate ItemsSource="{Binding MailCollection}" DataType="{x:Type local:SortedMailCollection}">
                <TextBlock Text="{Binding Header}">
                    <!--<TextBlock.Visibility>
                                <MultiBinding ConverterParameter="header"  Converter="{StaticResource BooleanToVisibilityMultiConverter2}">
                                    <Binding Path="ShowAll" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                    <Binding Path="MailCollection"/>
                                </MultiBinding>
                    </TextBlock.Visibility>-->
                    </TextBlock>
                <HierarchicalDataTemplate.ItemTemplate>
                    <DataTemplate >
                        <Border  BorderThickness="0,0,0,1" BorderBrush="Gray">
                            <!--<Border.Visibility>
                                <MultiBinding Converter="{StaticResource BooleanToVisibilityMultiConverter2}">
                                    <Binding Path="ShowAll" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                    <Binding Path="IsUnRead"/>
                                </MultiBinding>
                            </Border.Visibility>-->
                        <Grid   Height="60">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton HorizontalAlignment="Left"  IsChecked="{Binding IsUnRead, Mode=TwoWay}" Grid.Column="0" Background="#FFB1D6F0">
                                <ToggleButton.Visibility>
                                    <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                        <Binding Path="IsMouseOver" FallbackValue="False"  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type syncfusion:TreeViewItemAdv}}"/>
                                        <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </ToggleButton.Visibility>
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                           <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Width" Value="14"/>
                                        </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Width="7" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Width"  Value="14"/>
                                                            <Setter Property="Width" TargetName="border" Value="14"/>
                                                            
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" TargetName="border" Value="#FF0067B0"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Background" TargetName="border" Value="#FF0067B0"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30*" />
                                    <RowDefinition Height="30*"/>
                                    <RowDefinition Height="30*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="70*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="10*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontSize="13" FontWeight="Bold" Text="{Binding Sender}" Grid.Column="0" Grid.Row="0"/>
                                <TextBlock FontSize="12" FontWeight="SemiBold" TextTrimming="WordEllipsis" Text="{Binding Subject}" Grid.Column="0" Grid.Row="1"/>
                                <TextBlock FontSize="12" Foreground="Gray" Text="{Binding Message}"  TextTrimming="WordEllipsis" Grid.Column="0" Grid.Row="2"/>
                                <Label Content="{Binding Date}" Grid.Column="1" Grid.Row="1"/>
                                <ToggleButton IsChecked="{Binding IsFlagged}" Visibility="Collapsed"  Grid.Column="1" Grid.Row="0">
                                    <ToggleButton.Content>
                                            <Path Data="M0,1.5480409L2.9240003,1.5480409 2.9240003,44.879043 0,44.879043z M13.070206,1.0048421E-05C19.906545,-0.0069781953,25.467971,3.6343748,34.017987,0.52327134L34.017987,18.413837C22.617967,22.564965,16.525987,14.707729,5.650989,19.503865L5.650989,1.6083267C8.3709896,0.41004016,10.791426,0.0023394859,13.070206,1.0048421E-05z" Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Width="14" Height="14" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton.Content>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <ContentPresenter TextElement.FontFamily="Calibri" TextElement.FontSize="23" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="#ADADAD"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Red"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Button Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=syncfusion:TreeViewItemAdv}, Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding DataContext.DeleteMailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}"  Grid.Column="2" Grid.Row="1">
                                    <Button.Content>
                                            <Path Data="F1M108.574,147.6743C108.299,147.1563,107.995,146.3563,107.463,145.4933C107.206,145.0533,106.928,144.5763,106.634,144.0723C106.351,143.5563,105.965,143.0763,105.611,142.5423C104.915,141.4593,104.007,140.4343,103.139,139.3563C102.944,139.1543,102.752,138.9513,102.558,138.7473C102.849,138.4333,103.137,138.1113,103.443,137.8333C103.895,137.4113,104.298,136.9553,104.745,136.6033C105.184,136.2373,105.599,135.8903,105.982,135.5713C106.737,134.9083,107.46,134.4863,107.926,134.1273C108.407,133.7863,108.681,133.5923,108.681,133.5923C108.681,133.5923,108.379,133.7373,107.849,133.9933C107.331,134.2683,106.531,134.5723,105.668,135.1043C105.228,135.3613,104.752,135.6393,104.247,135.9333C103.732,136.2153,103.252,136.6023,102.717,136.9563C102.342,137.1973,101.979,137.4853,101.613,137.7663C101.171,137.3143,100.725,136.8753,100.26,136.4863C99.763,136.0603,99.327,135.6083,98.827,135.2493C98.338,134.8773,97.875,134.5253,97.448,134.2003C97.114,133.9383,96.618,133.5973,96.135,133.2763C95.329,132.7403,94.238,133.0093,93.78,133.8613L93.763,133.8933C93.31,134.7353,93.671,135.7813,94.545,136.1693C95.08,136.4063,95.617,136.6563,95.932,136.8333C96.35,137.0523,96.802,137.2903,97.281,137.5413C97.77,137.7763,98.248,138.1323,98.767,138.4433C99.134,138.6563,99.491,138.9153,99.85,139.1673C99.743,139.2543,99.639,139.3403,99.531,139.4273C98.544,140.3823,97.498,141.3063,96.662,142.3073C96.236,142.8033,95.783,143.2403,95.424,143.7403C95.052,144.2293,94.7,144.6923,94.376,145.1193C94.114,145.4533,93.772,145.9483,93.451,146.4323C92.916,147.2373,93.185,148.3283,94.037,148.7873L94.068,148.8043C94.91,149.2573,95.956,148.8953,96.344,148.0213C96.582,147.4863,96.832,146.9493,97.009,146.6343C97.228,146.2173,97.465,145.7643,97.717,145.2863C97.951,144.7973,98.307,144.3193,98.618,143.7993C99.232,142.7423,100.052,141.7363,100.829,140.6753C100.974,140.5123,101.116,140.3473,101.26,140.1823C101.471,140.3413,101.677,140.4973,101.892,140.6543C102.865,141.5213,103.901,142.3513,104.733,143.2683C105.155,143.7193,105.611,144.1233,105.963,144.5703C106.33,145.0093,106.676,145.4233,106.996,145.8063C107.659,146.5623,108.08,147.2843,108.44,147.7513C108.78,148.2313,108.975,148.5063,108.975,148.5063C108.975,148.5063,108.829,148.2033,108.574,147.6743" Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"  Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Button.Content>
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <ContentPresenter TextElement.FontFamily="Calibri" TextElement.FontSize="23" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="#ADADAD"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="Red"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Red"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Grid>
                        </Border>
                    </DataTemplate>
                </HierarchicalDataTemplate.ItemTemplate>
            </HierarchicalDataTemplate>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <Style x:Key="OutlookToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ContentPresenter TextElement.FontFamily="Calibri" TextElement.FontSize="23" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FF00A4ED"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="#FF00A4ED"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
      
        <Grid x:Name="_MailList" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <local:SearchTextBox WaterMarkText="search" x:Name="SearchBox" Width="200"/>
                <ComboBox SelectedIndex="0" x:Name="SearchCombobox" >
                    <ComboBoxItem  Content="Current Folder"/>
                    <ComboBoxItem Content="All Folder"/>
                    <ComboBoxItem Content="Current Mailbox"/>
                    <ComboBoxItem Content="All Mailbox"/>
                    <ComboBoxItem Content="All Outlook Items"/>
                </ComboBox>
            </StackPanel>
            <Grid Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Column="0">
                    <ToggleButton x:Name="allMail" Checked="allMail_Checked_1" Margin="5,0,5,0" Height="25" IsChecked="True"  Width="40" Content="All" Style="{StaticResource OutlookToggleButtonStyle}"/>
                    <ToggleButton x:Name="unReadMail" Checked="unReadMail_Checked_1" Margin="5,0,5,0" Height="25" Content="Unread" Style="{StaticResource OutlookToggleButtonStyle}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Grid.Column="1">
                        <StackPanel  Orientation="Horizontal">
                        <ToggleButton  BorderBrush="Transparent" Background="Transparent" Height="13" Width="13" >
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <ContentPresenter TextElement.Foreground="Black"  TextElement.FontFamily="Calibri" TextElement.FontSize="23" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="#ADADAD"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="#FF00A4ED"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Foreground" Value="Black"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path Data="M100.878433227539,0L147.306049346924,0 147.520000457764,0.183021545410156 63.3833208084106,80.1599798202515 285.305179595947,80.1599798202515 285.305179595947,111.579316139221 63.3833208084106,111.579316139221 147.413028717041,191.500350952148 100.610992431641,191.500350952148 23.4277610778809,118.137722015381 0,95.8696477115154z" Stretch="Uniform" Fill="Black" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <TransformGroup.Children>
                                                                <RotateTransform Angle="90" />
                                                                <ScaleTransform ScaleX="-1" ScaleY="-1" />
                                                            </TransformGroup.Children>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Path Data="M100.878433227539,0L147.306049346924,0 147.520000457764,0.183021545410156 63.3833208084106,80.1599798202515 285.305179595947,80.1599798202515 285.305179595947,111.579316139221 63.3833208084106,111.579316139221 147.413028717041,191.500350952148 100.610992431641,191.500350952148 23.4277610778809,118.137722015381 0,95.8696477115154z" Stretch="Uniform" Fill="Black" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <TransformGroup>
                                                                <TransformGroup.Children>
                                                                    <RotateTransform Angle="270" />
                                                                    <ScaleTransform ScaleX="-1" ScaleY="-1" />
                                                                </TransformGroup.Children>
                                                            </TransformGroup>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                            </ToggleButton>
                            <Label   Content="Newest"/>
                        </StackPanel>
                    <Border>
                        <StackPanel  Orientation="Horizontal">
                            <ToggleButton Style="{StaticResource OutlookToggleButtonStyle}" BorderBrush="Transparent" Background="Transparent" Height="10" Width="10"  x:Name="PopupButton">
                                <Grid>
                                    <Path Data="M0,0L516.999987125397,0 258.499987125397,318.999981067944z" Stretch="Uniform" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"  Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <RotateTransform Angle="0" />
                                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </ToggleButton>
                            <Label x:Name="PopupLabel"  Content="By Date"/>
                            <Popup PlacementTarget="{Binding ElementName=PopupButton}" IsOpen="{Binding IsChecked, ElementName=PopupButton, Mode=TwoWay}" StaysOpen="False">
                                <ListBox SelectionChanged="ListBox_SelectionChanged_1">
                                    <ListBoxItem Content="By Date"/>

                                    <ListBoxItem Content="By Sender"/>
                                    <ListBoxItem Content="By To"/>
                                </ListBox>
                            </Popup>
                        </StackPanel>
                    </Border>
                </StackPanel>

            </Grid>
            <syncfusion:TreeViewAdv AllowDragDrop="False" Loaded="ShowAllTreeView_Loaded_1" x:Name="ShowAllTreeView" AnimationType="None" syncfusion:SkinStorage.VisualStyle="Office2013"  ItemContainerStyle="{StaticResource TreeViewItemStyle}"  ItemsSource="{Binding SelectedMailCollection}" Grid.Row="2">
               
            </syncfusion:TreeViewAdv>
            <syncfusion:TreeViewAdv AllowDragDrop="False" AnimationType="None" x:Name="UnreadTreeview" Visibility="Collapsed" syncfusion:SkinStorage.VisualStyle="Office2013"  ItemContainerStyle="{StaticResource TreeViewItemStyle}"   Grid.Row="2">

            </syncfusion:TreeViewAdv>
            <!--<ListBox syncfusion:SkinStorage.VisualStyle="Metro"    ItemsSource="{Binding SelectedMailCollection}" Grid.Row="2">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Visibility">
                            <Setter.Value>
                                <Binding Path=""
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>-->
        </Grid>
    </Grid>
</UserControl>
