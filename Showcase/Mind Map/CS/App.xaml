<Application x:Class="MindMap.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MindMap"
                   xmlns:util="clr-namespace:Syncfusion.UI.Xaml.Diagram.Utility;assembly=Syncfusion.SfDiagram.Wpf"
             xmlns:panels="clr-namespace:Syncfusion.UI.Xaml.Diagram.Panels;assembly=Syncfusion.SfDiagram.Wpf"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Syncfusion.SfDiagram.Wpf;component/Resources/BindingStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="local:CNode" BasedOn="{StaticResource NodeBindingStyle}">
                </Style>

            <Style TargetType="syncfusion:Connector" BasedOn="{StaticResource ConnectorBindingStyle}">
            </Style>
            
            <Style TargetType="syncfusion:AnnotationEditor" BasedOn="{StaticResource AnnotationEditorBindingStyle}"/>

            <!--Style for Chromeless Window Title Bar-->
            <ControlTemplate x:Key="Titlebartemplate" TargetType="{x:Type shared:TitleBar}">
                <Border Height="70"
                Background="#34495d"
                CornerRadius="0,0,0,0">
                    <Border Width="Auto"
                    Background="Transparent"
                    BorderBrush="#34495d"
                    BorderThickness="0,0,0,0"
                    CornerRadius="0,0,0,0">
                        <ContentControl>
                            <ContentControl.Content>
                                <Grid>
                                    <Grid Height="40" HorizontalAlignment="Left" Margin="20,0,0,0">
                                        <Image
                                    Source="/Images/Icon.ico" />
                                    </Grid>
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ContentControl.Content>
                        </ContentControl>
                    </Border>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="MinimizeIcon" TargetType="{x:Type Button}">

                <Border Name="minborder4"
                Width="14"
                Height="14"
                Margin="1,0,1,5"
                Background="Transparent"
                BorderThickness="1"
                CornerRadius="1">
                    <Path x:Name="minimize"
                  Height="6"
                  VerticalAlignment="Center"
                  Data="M0,0 L27,0 L27,6 L0,6 z"
                  Fill="#F3F4F5"
                  Opacity="75"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="minimize" Property="Fill" Value="#FFFFFFFF" />
                        <Setter TargetName="minimize" Property="Opacity" Value="100" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="MaximizeIcon" TargetType="{x:Type Button}">

                <Border Name="maxborder4"
                Width="14"
                Height="14"
                Margin="1,0,1,5"
                Background="Transparent"
                BorderThickness="1"
                CornerRadius="1">
                    <Path x:Name="maximize"
                  Fill="#F3F4F5"
                  Opacity="75"
                  Stretch="Fill"
                  UseLayoutRounding="False"
                  VerticalAlignment="Center"
                  Data="F1 M 271.133,0L 271.133,27.261L 298.395,27.261L 298.395,0L 271.133,0 Z M 275.438,22.9577L 275.438,10.5071L 294.09,10.5071L 294.09,22.9577L 275.438,22.9577 Z "/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="maximize" Property="Fill" Value="#FFFFFFFF" />
                        <Setter TargetName="maximize" Property="Opacity" Value="100" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="RestoreIcon" TargetType="{x:Type Button}">

                <Border Name="restoreborder4"
                Width="14"
                Height="14"
                Margin="1,0,1,5"
                Background="Transparent"
                BorderThickness="1"
                CornerRadius="1">
                    <Path x:Name="restore"
                  Data="M2.1700439,12.881993 L2.1700439,19.161991 L11.579041,19.161991 L11.579041,14.223001 L7.1100035,14.223001 L7.1100035,12.881993 z M9.3569574,5.4813881 L9.3569574,7.5829897 L13.75,7.5829897 L13.75,11.976841 L19.087025,11.976841 L19.087025,5.4813881 z M7.1100035,0 L21.333002,0 L21.333002,14.223001 L13.75,14.223001 L13.75,21.332989 L0,21.332989 L0,7.5829897 L7.1100035,7.5829897 z"
                  Fill="#F3F4F5"
                  Opacity="75"
                  Stretch="Fill"                  
                  VerticalAlignment="Center"
                  UseLayoutRounding="False" />
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="restore" Property="Fill" Value="#FFFFFFFF" />
                        <Setter TargetName="restore" Property="Opacity" Value="100" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="CloseIcon" TargetType="{x:Type Button}">

                <Border Name="closeborder4"
                Width="14"
                Height="14"
                Margin="1,0,1,5"
                Background="Transparent"
                BorderThickness="1"
                CornerRadius="1">
                    <Path x:Name="close"
                  VerticalAlignment="Bottom"
                  Data="F1 M 148.815,44.4075L 144.143,39.7357L 135.185,48.694L 126.227,39.7357L 121.555,44.4075L 130.513,53.3665L 121.555,62.3229L 126.227,66.9967L 135.185,58.0378L 144.143,66.9967L 148.815,62.3229L 139.857,53.3665L 148.815,44.4075 Z "
                  Fill="#F3F4F5"
                  Opacity="75"
                  Stretch="Fill"
                  UseLayoutRounding="False" />
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="close" Property="Fill" Value="#FFFFFFFF" />
                        <Setter TargetName="close" Property="Opacity" Value="100" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  Style for Chromeless Window  -->
            <ControlTemplate x:Key="ChromelessWindowTemplate" TargetType="{x:Type syncfusion:ChromelessWindow}">
                <Border Name="OuterBorder"
                Background="#F3F4F5"
                BorderBrush="#FFD8D8D8"
                BorderThickness="0.5">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <shared:TitleBar Name="PART_TitleBar"
                               Grid.Row="0"
                               Template="{StaticResource Titlebartemplate}">
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl x:Name="TitlePresenter"
                                            Margin="40,5,5,5"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Title}"
                                            FontFamily="Segoe UI"
                                            FontSize="20"
                                            FontWeight="Light"
                                            Foreground="White"
                                            Opacity="90" />
                                </StackPanel>
                                <StackPanel Grid.Column="1"
                                    Margin="0,0,12,10"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Orientation="Horizontal">
                                    <syncfusion:TitleButton x:Name="MinimizeButton"
                                              Margin="15,0,0,0"
                                              Command="syncfusion:ChromelessWindow.ToggleMinimizedState"
                                              Template="{StaticResource MinimizeIcon}"
                                              ToolTip="Minimize"
                                              syncfusion:WindowChrome.IsHitTestVisibleInChrome="True" />
                                    <syncfusion:TitleButton x:Name="MaximizeButton"
                                              Margin="15,0,0,0"
                                              Visibility="Visible"
                                              Command="syncfusion:ChromelessWindow.ToggleMaximizedState"
                                              Template="{StaticResource MaximizeIcon}"
                                              ToolTip="Maximize"
                                              syncfusion:WindowChrome.IsHitTestVisibleInChrome="True" />
                                    <syncfusion:TitleButton x:Name="RestoreButton"
                                              Margin="15,0,0,0"
                                              Visibility="Collapsed"
                                              Command="syncfusion:ChromelessWindow.ToggleMaximizedState"
                                              Template="{StaticResource RestoreIcon}"
                                              ToolTip="Restore"
                                              syncfusion:WindowChrome.IsHitTestVisibleInChrome="True" />
                                    <syncfusion:TitleButton x:Name="CloseButton"
                                              Margin="15,0,0,0"
                                              Command="syncfusion:ChromelessWindow.CloseWindow"
                                              Template="{StaticResource CloseIcon}"
                                              ToolTip="Close"
                                              syncfusion:WindowChrome.IsHitTestVisibleInChrome="True" />
                                </StackPanel>
                            </Grid>
                        </shared:TitleBar>
                        <Border Name="ContentAreaBorder"
                        Grid.Row="1"
                        CornerRadius="{Binding ElementName=CornerRadiusSlider,
                                               Path=Value}">
                            <ContentPresenter Grid.Row="1" Margin="0,0,0,0" />
                        </Border>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ResizeMode" Value="NoResize"/>
                            <Condition Property="WindowState" Value="Normal"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Visibility" Value="Visible" TargetName="MinimizeButton"/>
                        <Setter Property="Visibility" Value="Visible" TargetName="MaximizeButton"/>
                        <Setter Property="Visibility" Value="Collapsed" TargetName="RestoreButton"/>
                        <Setter Property="Margin" Value="0" TargetName="OuterBorder"/>
                    </MultiTrigger>

                    <Trigger Property="WindowState" Value="Maximized">
                        <Setter Property="Margin" Value="0" TargetName="OuterBorder"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ResizeMode" Value="NoResize"/>
                            <Condition Property="WindowState" Value="Maximized"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Visibility" Value="Visible" TargetName="MinimizeButton"/>
                        <Setter Property="Visibility" Value="Collapsed" TargetName="MaximizeButton"/>
                        <Setter Property="Visibility" Value="Visible" TargetName="RestoreButton"/>
                        <Setter Property="Margin" Value="0" TargetName="OuterBorder"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <DataTemplate x:Key="vtemplate">
                <Border Padding="10">
                    <TextBlock  FontFamily="Segoe UI"
                       FontSize="18"
                       FontWeight="Medium"
                       Text="{Binding Path=Content,
                                      Mode=TwoWay}" />
            </Border>
        </DataTemplate>

            <DataTemplate x:Key="vtemplate1">
                <Border Padding="10">
                    <TextBlock Foreground="White" FontFamily="Segoe UI"
                       FontSize="15"
                       FontWeight="ExtraBold"
                       Text="{Binding Path=Content,
                                      Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="etempalte">
                <TextBox AcceptsReturn="True" Foreground="Black"
                 
                 Text="{Binding Path=Content,
                                Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                 util:FocusUtility.FocusOnLoad="True" />
        </DataTemplate>

            <Style x:Key="NormalLine" TargetType="Path">
                <Setter Property="Stroke" Value="Black" />
                <Setter Property="StrokeThickness" Value="1" />
            </Style>
            <Style x:Key="IntersectLine" TargetType="Path">
                <Setter Property="Stroke" Value="Black" />
                <Setter Property="Fill" Value="Black" />
                <Setter Property="StrokeThickness" Value="2" />
            </Style>
            <Style x:Key="SelectedLine" TargetType="Path">
                <Setter Property="Stroke" Value="Blue" />
                <Setter Property="Fill" Value="Blue" />
                <Setter Property="StrokeThickness" Value="2" />
            </Style>

            <DataTemplate x:Key="RNodeTemplate">
                <Border Background="{Binding Path=SelectedBrush}"
                BorderBrush="{Binding Path=SelectedBrush}"
                CornerRadius="12">
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="CNodeTemplate">
                <Border Background="{Binding Path=SelectedBrush}"
                BorderBrush="{Binding Path=SelectedBrush}"
                CornerRadius="12">
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="LeafNodeTemplate">
                <Border 
                Background="Transparent"
              >
                    <!--<Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">-->
                    <Path StrokeThickness="2" Stroke="Black" Data="{Binding Path=path}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent">

                    </Path>
                    <!--<Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </Canvas>-->
                </Border>

            </DataTemplate>
            <DataTemplate x:Key="IntersectTemplate">
                <Border Background="{Binding Path=SelectedBrush}"
                BorderBrush="Black"
                BorderThickness="4"
                CornerRadius="12">
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="SelectedTemplate">
                <Border Background="{Binding Path=SelectedBrush}"
                BorderBrush="Blue"
                BorderThickness="5"
                CornerRadius="12">
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </Border>
            </DataTemplate>

            <SolidColorBrush x:Key="PathStrokeThemeBrush" Color="Black" />
            <core:Double x:Key="ConnectorThemeThickness">1</core:Double>
            <core:Double x:Key="ConnectorDecoratorThemeWidth">10</core:Double>
            <core:Double x:Key="ConnectorDecoratorThemeHeight">10</core:Double>
            <core:Double x:Key="PortThemeWidth">10</core:Double>
            <core:Double x:Key="PortThemeHeight">10</core:Double>
            <Style  TargetType="{x:Type local:CustomConnector}">             
                
                <Setter Property="ConnectorGeometryStyle">
                    <Setter.Value>
                        <Style TargetType="Path">
                            <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                            <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="SourceDecoratorStyle">
                    <Setter.Value>
                        <Style TargetType="Path">
                            <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                            <Setter Property="Fill" Value="{StaticResource PathStrokeThemeBrush}"/>
                            <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                            <Setter Property="Width" Value="{StaticResource ConnectorDecoratorThemeWidth}"/>
                            <Setter Property="Height" Value="{StaticResource ConnectorDecoratorThemeHeight}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="TargetDecoratorStyle">
                    <Setter.Value>
                        <Style TargetType="Path">
                            <Setter Property="Stroke" Value="{StaticResource PathStrokeThemeBrush}"/>
                            <Setter Property="Fill" Value="{StaticResource PathStrokeThemeBrush}"/>
                            <Setter Property="StrokeThickness" Value="{StaticResource ConnectorThemeThickness}"/>
                            <Setter Property="Width" Value="{StaticResource ConnectorDecoratorThemeWidth}"/>
                            <Setter Property="Height" Value="{StaticResource ConnectorDecoratorThemeHeight}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:CustomConnector}">
                            <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
                                <Canvas>
                                    <Path Style="{TemplateBinding ConnectorGeometryStyle}"
                    Data="{TemplateBinding Geometry}"/>
                                    <!--<Path StrokeThickness="23" Stroke="Transparent"
                    Data="{TemplateBinding TransparentGeometry}"/>-->
                                    <Path x:Name="PART_SourceDecorator" Style="{TemplateBinding SourceDecoratorStyle}"
                    Data="{TemplateBinding SourceDecorator}"/>
                                    <Path x:Name="PART_TargetDecorator" Style="{TemplateBinding TargetDecoratorStyle}"
                    Data="{TemplateBinding TargetDecorator}"/>
                                    <panels:AnnotationPanel x:Name="PART_Annotations">
                                    </panels:AnnotationPanel>
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="ApplicationPageBackgroundThemeBrush">#FF1D1D1D</SolidColorBrush>
            <!--<SolidColorBrush x:Key="AppBarBackgroundThemeBrush">#FF00BFFF</SolidColorBrush>-->



            <SolidColorBrush x:Key="AppBarBackgroundThemeBrush">#f2f2f2</SolidColorBrush>
            <SolidColorBrush x:Key="AppBarBorderThemeBrush">#E5000000</SolidColorBrush>
            <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush">#00FFFFFF</SolidColorBrush>
            <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush">#000000</SolidColorBrush>
            <SolidColorBrush x:Key="AppBarItemPointerOverBackgroundThemeBrush1">#C9C9C9</SolidColorBrush>
            <SolidColorBrush x:Key="AppBarItemPressedForegroundThemeBrush1">#ADADAD</SolidColorBrush>


            <Color x:Key="AppBarItemForegroundThemeColor">#000000</Color>
            <Color x:Key="AppBarItemPointerOverForegroundThemeColor">#FFFFFFFF</Color>
            <Thickness x:Key="ToggleButtonBorderThemeThickness">2</Thickness>
            <Color x:Key="AppBarItemPointerOverBackgroundThemeBrush">#333333</Color>
            <Color x:Key="AppBarItemPressedForegroundThemeBrush">#ffffff</Color>
            <Color x:Key="AppBarItemPressedBackgroundThemeBrush">#000000</Color>
            <Color x:Key="AppBarItemDisabledForegroundThemeBrush">#999999</Color>

            <Style x:Key="AppBarButtonStyle" TargetType="ButtonBase">
                <Setter Property="Foreground" Value="{DynamicResource AppBarItemForegroundThemeBrush}"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                                <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                                    <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                        <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="Transparent"/>

                                        <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        <!--<ContentPresenter x:Name="Content"  HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"/>-->
                                        <local:ContentPresenters x:Name="ContentPresenter" Content="{TemplateBinding Content}"
                                                         HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"></local:ContentPresenters>

                                    </Grid>
                                    <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                                />
                                </StackPanel>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullScreenLandscape"/>
                                        <VisualState x:Name="Filled"/>
                                        <VisualState x:Name="FullScreenPortrait">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Snapped">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>

                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedBackgroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>



                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">

                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <!--<Storyboard>

                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemForegroundThemeColor}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>-->
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PathAppBarButtonStyle" TargetType="ButtonBase">

                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="Black"></Setter>
                <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="20">
                                <Path  StrokeThickness="1"
             Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Margin="5" RenderTransformOrigin="0.5,0.5" 
             Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
             Data="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </Viewbox>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                                <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                                    <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                        <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="Transparent"/>

                                        <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        <!--<ContentPresenter x:Name="Content"  HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"/>-->
                                        <local:ContentPresenters x:Name="ContentPresenter" Foreground="Black"  Content="{TemplateBinding Content}"
                                                         HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"></local:ContentPresenters>

                                    </Grid>
                                    <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                                />
                                </StackPanel>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullScreenLandscape"/>
                                        <VisualState x:Name="Filled"/>
                                        <VisualState x:Name="FullScreenPortrait">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Snapped">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>

                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedBackgroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>



                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">

                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>

                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                                <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemForegroundThemeColor}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="AppBarButtonStyle1" TargetType="ButtonBase">
                <Setter Property="Foreground" Value="{DynamicResource AppBarItemForegroundThemeBrush}"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                                <StackPanel VerticalAlignment="Top" Margin="0,4,0,2">
                                    <Grid Width="40" Height="40" HorizontalAlignment="Center">
                                        <TextBlock x:Name="BackgroundGlyph" Text="&#x25A0;" FontFamily="Segoe UI Symbol" Height="40" Margin="0,-19,0,5" FontSize="50.333"  Foreground="Transparent"/>


                                        <local:ContentPresenters x:Name="ContentPresenter" Content="{TemplateBinding Content}"
                                                         HorizontalAlignment="Center" Margin="0,-2,0,-2" VerticalAlignment="Center"
                                                         ContentTemplate="{TemplateBinding ContentTemplate}"></local:ContentPresenters>

                                    </Grid>
                                    <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                                />
                                </StackPanel>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullScreenLandscape"/>
                                        <VisualState x:Name="Filled"/>
                                        <VisualState x:Name="FullScreenPortrait">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Snapped">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="LightBlue">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeColor}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>

                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="DarkBlue">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>



                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="(Button.Foreground).Color">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph"
                                                                       Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <DiscreteColorKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}">

                                                    </DiscreteColorKeyFrame>
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">

                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <!--<Storyboard>

                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                        <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemForegroundThemeColor}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>-->
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AppBarToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="#FFFFFFFF" />
                <Setter Property="BorderThickness" Value="{StaticResource ToggleButtonBorderThemeThickness}" />
                <Setter Property="Padding" Value="12,4,12,5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="100">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullScreenLandscape"/>
                                        <VisualState x:Name="Filled"/>
                                        <VisualState x:Name="FullScreenPortrait">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Snapped">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="OutlineGlyph" To="{StaticResource AppBarItemPressedForegroundThemeBrush}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                                <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemPressedForegroundThemeBrush}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <Storyboard>

                                                <ColorAnimation Storyboard.TargetName="OutlineGlyph" To="{StaticResource AppBarItemDisabledForegroundThemeBrush}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                                <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemDisabledForegroundThemeBrush}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>

                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">

                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="PointerFocused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>

                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
                                                <ColorAnimation Storyboard.TargetName="BackgroundGlyph" To="{StaticResource AppBarItemForegroundThemeColor}" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"></ColorAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                                    <Grid Width="40" Height="40" HorizontalAlignment="Center">
                                        <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                        <TextBlock x:Name="BackgroundCheckedGlyph" Visibility="Visible" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="Transparent"/>
                                        <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="White"/>
                                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"
                                                      >

                                        </ContentPresenter>
                                        <!--Pending-->
                                        <!--Foreground="Black"/>-->

                                    </Grid>
                                    <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="White"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                               />
                                    <!--<ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />-->
                                </StackPanel>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
