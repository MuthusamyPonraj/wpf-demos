<UserControl
    x:Class="syncfusion.navigationdemos.wpf.MailView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:viewModel="clr-namespace:syncfusion.navigationdemos.wpf"
    x:Name="mailViewUserControl">
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <viewModel:BoolToVisibilityMultiConverter x:Key="BoolToVisibilityMultiConverter" />
            <Style x:Key="TreeViewItemStyle" TargetType="{x:Type syncfusion:TreeViewItemAdv}">
                <Setter Property="Panel.Background" Value="Transparent" />
                <Setter Property="Control.Padding" Value="2,0,2,0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <Style TargetType="IFrameworkInputElement">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle
                                                Stroke="#FF000000"
                                                StrokeDashArray="1 2"
                                                StrokeThickness="5" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <syncfusion:TreeViewAdvVirtualizingPanel Name="itemsPanel" IsShowLine="False" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="syncfusion:TreeViewItemAdv">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid
                                    Grid.Row="1"
                                    Background="Transparent"
                                    Focusable="False"
                                    TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Name="verticalLine" Grid.RowSpan="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <syncfusion:TreeRootLine
                                            Name="treeRootLine"
                                            Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            Focusable="False"
                                            IsVerticalLine="True"
                                            LineBrush="White"
                                            LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            SnapsToDevicePixels="True"
                                            Visibility="Visible" />
                                        <syncfusion:TreeRootLine
                                            Name="secondTreeRootLine"
                                            Grid.Row="1"
                                            Width="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            Focusable="False"
                                            IsVerticalLine="True"
                                            LineBrush="White"
                                            LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            SnapsToDevicePixels="True"
                                            Visibility="Visible" />
                                    </Grid>
                                    <Grid Name="horizontalLineGrid">
                                        <syncfusion:TreeRootLine
                                            Name="horizontalLine"
                                            Width="13"
                                            Height="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            Margin="9,0,-3,0"
                                            HorizontalAlignment="Right"
                                            Focusable="False"
                                            IsVerticalLine="False"
                                            LineBrush="White"
                                            LineStrokeThickness="{Binding Path=LineStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                            SnapsToDevicePixels="True" />
                                    </Grid>
                                    <syncfusion:BottomLine
                                        Name="bottomBorder"
                                        Fill="Transparent"
                                        SnapsToDevicePixels="True"
                                        TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewItemAdv}}}" />
                                    <syncfusion:SelectRectangle
                                        Name="selectedRectangle"
                                        Fill="Transparent"
                                        SnapsToDevicePixels="True"
                                        TargetItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewItemAdv}}}" />
                                    <Expander
                                        Name="partExpander"
                                        Height="13"
                                        HorizontalAlignment="Center"
                                        Panel.ZIndex="100"
                                        Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                        Focusable="False"
                                        IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{TemplateBinding syncfusion:TreeViewAdv.ExpanderStyle}" />
                                    <Ellipse
                                        x:Name="path"
                                        Width="12"
                                        Height="12"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Panel.ZIndex="100"
                                        Fill="White"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        StrokeThickness="2"
                                        Visibility="Collapsed">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="-180" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Offset="0.378" Color="#FFEBF0F4" />
                                                <GradientStop Offset="1" Color="#FF119EDA" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Grid
                                        x:Name="grid"
                                        Grid.Column="1"
                                        Panel.ZIndex="20">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Name="PART_CompleteHeader" Orientation="Horizontal">
                                            <StackPanel Name="PART_ImagePanel" Orientation="Horizontal">
                                                <Image
                                                    Name="expanderImage"
                                                    Width="{TemplateBinding ImageWidth}"
                                                    Height="{TemplateBinding ImageHeight}"
                                                    Focusable="False"
                                                    Source="{TemplateBinding ExpandedImageSource}"
                                                    Stretch="{TemplateBinding ImageStretch}"
                                                    Visibility="Collapsed" />
                                                <Image
                                                    Name="collapseImage"
                                                    Width="{TemplateBinding ImageWidth}"
                                                    Height="{TemplateBinding ImageHeight}"
                                                    Focusable="False"
                                                    Source="{TemplateBinding CollapsedImageSource}"
                                                    Stretch="{TemplateBinding ImageStretch}" />
                                                <Image
                                                    Name="leftImage"
                                                    Width="{TemplateBinding ImageWidth}"
                                                    Height="{TemplateBinding ImageHeight}"
                                                    Focusable="False"
                                                    Source="{TemplateBinding LeftImageSource}"
                                                    Stretch="{TemplateBinding ImageStretch}" />
                                            </StackPanel>
                                            <StackPanel
                                                Name="itemContent"
                                                Width="{Binding ElementName=grid, Path=ActualWidth}"
                                                VerticalAlignment="Center"
                                                Focusable="True"
                                                KeyboardNavigation.TabNavigation="Cycle">
                                                <Border
                                                    Name="Bd"
                                                    MinHeight="19"
                                                    Padding="{TemplateBinding Padding}"
                                                    Background="{TemplateBinding Panel.Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="1"
                                                    SnapsToDevicePixels="True"
                                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                                    ToolTip="{TemplateBinding syncfusion:TreeViewItemAdv.Header}"
                                                    ToolTipService.HorizontalOffset="4"
                                                    ToolTipService.IsEnabled="False"
                                                    ToolTipService.Placement="Center"
                                                    ToolTipService.VerticalOffset="2">
                                                    <Grid>
                                                        <ContentPresenter
                                                            Name="partHeader"
                                                            Margin="{TemplateBinding Padding}"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Center"
                                                            Content="{TemplateBinding syncfusion:TreeViewItemAdv.Header}"
                                                            ContentSource="Header"
                                                            ContentTemplate="{TemplateBinding syncfusion:TreeViewItemAdv.HeaderTemplate}"
                                                            ContentTemplateSelector="{TemplateBinding syncfusion:TreeViewItemAdv.HeaderTemplateSelector}"
                                                            Visibility="Visible" />
                                                        <ContentPresenter
                                                            x:Name="loadingContentPresenter"
                                                            HorizontalAlignment="Left"
                                                            Content="{TemplateBinding LoadingHeader}"
                                                            ContentTemplate="{TemplateBinding LoadingHeaderTemplate}"
                                                            Visibility="Collapsed" />
                                                    </Grid>
                                                </Border>
                                                <ContentPresenter
                                                    Name="partEditorHeader"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                    VerticalAlignment="Center"
                                                    Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewItemAdv}}}"
                                                    ContentSource="Header"
                                                    ContentTemplate="{Binding Path=EditedItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                                    ContentTemplateSelector="{Binding Path=EditedItemTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}"
                                                    Visibility="Collapsed" />
                                            </StackPanel>
                                            <Image
                                                Name="rightImage"
                                                Width="{TemplateBinding ImageWidth}"
                                                Height="{TemplateBinding ImageHeight}"
                                                Focusable="False"
                                                Source="{TemplateBinding RightImageSource}"
                                                Stretch="{TemplateBinding ImageStretch}" />
                                        </StackPanel>
                                    </Grid>
                                    <Grid
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="-45,0,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <ItemsPresenter Name="itemHost" Visibility="Collapsed" />
                                    </Grid>
                                </Grid>
                                <Border
                                    Name="bottomDragLine"
                                    Grid.Row="2"
                                    Height="2"
                                    Visibility="Collapsed" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18" />
                                    <Setter Property="Padding" Value="12,5,12,5" />
                                    <Setter TargetName="bottomBorder" Property="Fill" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="partExpander" Property="Margin" Value="8,0,0,0" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsShowToolTip" Value="True">
                                    <Setter TargetName="Bd" Property="ToolTipService.IsEnabled" Value="True" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.LeftImageSource" Value="{x:Null}">
                                    <Setter TargetName="leftImage" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.RightImageSource" Value="{x:Null}">
                                    <Setter TargetName="rightImage" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="True">
                                    <Setter TargetName="expanderImage" Property="Source" Value="{Binding Path=ExpandedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="collapseImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="expanderImage" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="itemHost" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="False">
                                    <Setter TargetName="collapseImage" Property="Source" Value="{Binding Path=CollapsedImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Setter TargetName="expanderImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="collapseImage" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="itemHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="True" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="expanderImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="leftImage" Property="Margin" Value="0,0,2,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="False" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="collapseImage" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="leftImage" Property="Margin" Value="0,0,2,0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="True" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.ExpandedImageSource" Value="{x:Null}" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsExpanded" Value="False" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.CollapsedImageSource" Value="{x:Null}" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.LeftImageSource" Value="{x:Null}" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_ImagePanel" Property="Visibility" Value="Collapsed" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsEditable" Value="True" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsInEditMode" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="partHeader" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Bd" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="partEditorHeader" Property="Visibility" Value="Visible" />
                                </MultiTrigger>
                                <Trigger Property="syncfusion:TreeViewAdv.ShowRootLines" Value="False">
                                    <Setter TargetName="horizontalLineGrid" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="verticalLine" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.HasItems" Value="False" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsLoadOnDemand" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="partExpander" Property="Visibility" Value="Hidden" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HeaderedContentControl.HasHeader" Value="False" />
                                        <Condition Property="FrameworkElement.Width" Value="NaN" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="partHeader" Property="FrameworkElement.MinWidth" Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HeaderedContentControl.HasHeader" Value="False" />
                                        <Condition Property="FrameworkElement.Height" Value="NaN" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="partHeader" Property="FrameworkElement.MinHeight" Value="19" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_CompleteHeader" Property="IsMouseOver" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="PART_CompleteHeader" Property="IsMouseOver" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="selectedRectangle" Property="Fill" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelectedFalse" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="selectedRectangle" Property="Fill" Value="{Binding Path=SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsDragOver" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsDragOver" Value="True" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="selectedRectangle" Property="Fill" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="false" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelected" Value="True" />
                                        <Condition Property="syncfusion:TreeViewItemAdv.IsSelectionActive" Value="False" />
                                        <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="true" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="selectedRectangle" Property="Fill" Value="{Binding Path=SelectionUnfocussedBackcolor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                    <Setter TargetName="Bd" Property="Opacity" Value="0.75" />
                                </MultiTrigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsDraging" Value="True">
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:TreeViewAdv}}}" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    <Setter TargetName="rightImage" Property="Opacity" Value="0.7" />
                                    <Setter TargetName="leftImage" Property="Opacity" Value="0.7" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsLoadOnDemand" Value="True">
                                    <Setter TargetName="partExpander" Property="Visibility" Value="Visible" />
                                </Trigger>

                                <Trigger Property="syncfusion:TreeViewItemAdv.IsLoading" Value="True">
                                    <Setter TargetName="partExpander" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="loadingContentPresenter" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="partHeader" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="path" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="syncfusion:TreeViewItemAdv.IsLoading" Value="False">
                                    <Trigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="beginLoadOnDemandStoryBoard" />
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type viewModel:MailCategoriesModel}">
                <Border>
                    <TextBlock Text="{Binding Header}" />
                </Border>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type viewModel:SortedMailCollectionModel}" ItemsSource="{Binding MailCollection}">
                <TextBlock Text="{Binding Header}" />
                <HierarchicalDataTemplate.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Gray" BorderThickness="0,0,0,1">
                            <Grid Height="60">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    HorizontalAlignment="Left"
                                    Background="#FFB1D6F0"
                                    IsChecked="{Binding IsUnRead, Mode=TwoWay}">
                                    <ToggleButton.Visibility>
                                        <MultiBinding Converter="{StaticResource BoolToVisibilityMultiConverter}">
                                            <Binding Path="IsMouseOver" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type syncfusion:TreeViewItemAdv}}" />
                                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </ToggleButton.Visibility>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Width" Value="14" />
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border
                                                            x:Name="border"
                                                            Width="10"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="0"
                                                            SnapsToDevicePixels="True">
                                                            <ContentPresenter
                                                                x:Name="contentPresenter"
                                                                Margin="{TemplateBinding Padding}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                Content="{TemplateBinding Content}"
                                                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Focusable="False"
                                                                RecognizesAccessKey="True"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="Button.IsDefaulted" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Width" Value="14" />
                                                                <Setter TargetName="border" Property="Width" Value="14" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter TargetName="border" Property="Background" Value="#FF0067B0" />
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="border" Property="Background" Value="#FF0067B0" />
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                                                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30*" />
                                        <RowDefinition Height="30*" />
                                        <RowDefinition Height="30*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70*" />
                                        <ColumnDefinition Width="20*" />
                                        <ColumnDefinition Width="10*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock FontWeight="Bold" Text="{Binding SenderDetails}" />
                                    <TextBlock
                                        Grid.Row="1"
                                        FontWeight="SemiBold"
                                        Text="{Binding Subject}"
                                        TextTrimming="WordEllipsis" />
                                    <TextBlock
                                        Grid.Row="2"
                                        Foreground="Gray"
                                        Text="{Binding Message}"
                                        TextTrimming="WordEllipsis" />
                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Height="30"
                                        Content="{Binding Date}" />
                                    <ToggleButton
                                        Grid.Column="1"
                                        IsChecked="{Binding IsFlagged}"
                                        Visibility="Collapsed">
                                        <ToggleButton.Content>
                                            <Path
                                                Width="14"
                                                Height="14"
                                                Data="M0,1.5480409L2.9240003,1.5480409 2.9240003,44.879043 0,44.879043z M13.070206,1.0048421E-05C19.906545,-0.0069781953,25.467971,3.6343748,34.017987,0.52327134L34.017987,18.413837C22.617967,22.564965,16.525987,14.707729,5.650989,19.503865L5.650989,1.6083267C8.3709896,0.41004016,10.791426,0.0023394859,13.070206,1.0048421E-05z"
                                                Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                                                RenderTransformOrigin="0.5,0.5"
                                                Stretch="Uniform">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </ToggleButton.Content>
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <ContentPresenter
                                                                Margin="{TemplateBinding Padding}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                RecognizesAccessKey="True"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                TextElement.FontFamily="Calibri"
                                                                TextElement.FontSize="23" />
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Foreground" Value="#ADADAD" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" Value="Red" />
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Foreground" Value="Red" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Red" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Button
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Command="{Binding DataContext.DeleteMailCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                        CommandParameter="{Binding}"
                                        Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=syncfusion:TreeViewItemAdv}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Button.Content>
                                            <Path
                                                Data="F1M108.574,147.6743C108.299,147.1563,107.995,146.3563,107.463,145.4933C107.206,145.0533,106.928,144.5763,106.634,144.0723C106.351,143.5563,105.965,143.0763,105.611,142.5423C104.915,141.4593,104.007,140.4343,103.139,139.3563C102.944,139.1543,102.752,138.9513,102.558,138.7473C102.849,138.4333,103.137,138.1113,103.443,137.8333C103.895,137.4113,104.298,136.9553,104.745,136.6033C105.184,136.2373,105.599,135.8903,105.982,135.5713C106.737,134.9083,107.46,134.4863,107.926,134.1273C108.407,133.7863,108.681,133.5923,108.681,133.5923C108.681,133.5923,108.379,133.7373,107.849,133.9933C107.331,134.2683,106.531,134.5723,105.668,135.1043C105.228,135.3613,104.752,135.6393,104.247,135.9333C103.732,136.2153,103.252,136.6023,102.717,136.9563C102.342,137.1973,101.979,137.4853,101.613,137.7663C101.171,137.3143,100.725,136.8753,100.26,136.4863C99.763,136.0603,99.327,135.6083,98.827,135.2493C98.338,134.8773,97.875,134.5253,97.448,134.2003C97.114,133.9383,96.618,133.5973,96.135,133.2763C95.329,132.7403,94.238,133.0093,93.78,133.8613L93.763,133.8933C93.31,134.7353,93.671,135.7813,94.545,136.1693C95.08,136.4063,95.617,136.6563,95.932,136.8333C96.35,137.0523,96.802,137.2903,97.281,137.5413C97.77,137.7763,98.248,138.1323,98.767,138.4433C99.134,138.6563,99.491,138.9153,99.85,139.1673C99.743,139.2543,99.639,139.3403,99.531,139.4273C98.544,140.3823,97.498,141.3063,96.662,142.3073C96.236,142.8033,95.783,143.2403,95.424,143.7403C95.052,144.2293,94.7,144.6923,94.376,145.1193C94.114,145.4533,93.772,145.9483,93.451,146.4323C92.916,147.2373,93.185,148.3283,94.037,148.7873L94.068,148.8043C94.91,149.2573,95.956,148.8953,96.344,148.0213C96.582,147.4863,96.832,146.9493,97.009,146.6343C97.228,146.2173,97.465,145.7643,97.717,145.2863C97.951,144.7973,98.307,144.3193,98.618,143.7993C99.232,142.7423,100.052,141.7363,100.829,140.6753C100.974,140.5123,101.116,140.3473,101.26,140.1823C101.471,140.3413,101.677,140.4973,101.892,140.6543C102.865,141.5213,103.901,142.3513,104.733,143.2683C105.155,143.7193,105.611,144.1233,105.963,144.5703C106.33,145.0093,106.676,145.4233,106.996,145.8063C107.659,146.5623,108.08,147.2843,108.44,147.7513C108.78,148.2313,108.975,148.5063,108.975,148.5063C108.975,148.5063,108.829,148.2033,108.574,147.6743"
                                                Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                                                RenderTransformOrigin="0.5,0.5"
                                                Stretch="Uniform">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <TransformGroup.Children>
                                                            <RotateTransform Angle="0" />
                                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                                        </TransformGroup.Children>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Button.Content>
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <ContentPresenter
                                                                Margin="{TemplateBinding Padding}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                RecognizesAccessKey="True"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                TextElement.FontFamily="Calibri"
                                                                TextElement.FontSize="23" />
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Foreground" Value="#ADADAD" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Foreground" Value="Red" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="Red" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </HierarchicalDataTemplate.ItemTemplate>
            </HierarchicalDataTemplate>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Margin="2"
                                SnapsToDevicePixels="true"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#F3F3F3" />
                <GradientStop Offset="0.5" Color="#EBEBEB" />
                <GradientStop Offset="0.5" Color="#DDDDDD" />
                <GradientStop Offset="1" Color="#CDCDCD" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />
            <Style x:Key="OutlookToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                TextElement.FontFamily="Calibri"
                                TextElement.FontSize="23" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#FF00A4ED" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="#FF00A4ED" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <ToggleButton
                    x:Name="allMail"
                    Width="40"
                    Height="25"
                    Command="{Binding Path=AllMail}"
                    CommandParameter="{Binding ElementName=mailViewUserControl}"
                    Content="All"
                    IsChecked="True"
                    Background="Transparent"
                    BorderThickness="0"/>
                <ToggleButton
                    x:Name="unReadMail"
                    Height="25"
                    Width="60"
                    Command="{Binding Path=UnreadMail}"
                    CommandParameter="{Binding ElementName=mailViewUserControl}"
                    Content="Unread"
                    Background="Transparent"
                    BorderThickness="0" />
            </StackPanel>
        </Grid>
        <syncfusion:TreeViewAdv
            x:Name="showAllTreeView"
            Grid.Row="1"
            AllowDragDrop="False"
            AnimationType="None"
            ItemContainerStyle="{StaticResource TreeViewItemStyle}"
            ItemsSource="{Binding SelectedMails}"
            LineBrush="White"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
        <syncfusion:TreeViewAdv
            x:Name="unReadTreeView"
            Grid.Row="1"
            AllowDragDrop="False"
            AnimationType="None"
            ItemContainerStyle="{StaticResource TreeViewItemStyle}"
            LineBrush="White"
            Visibility="Collapsed" />
    </Grid>
</UserControl>
